// Package client provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package client

import (
	"encoding/json"
	"time"

	externalRef0 "terraform-provider-render/internal/client/autoscaling"
	externalRef1 "terraform-provider-render/internal/client/blueprints"
	externalRef2 "terraform-provider-render/internal/client/disks"
	externalRef3 "terraform-provider-render/internal/client/events"
	externalRef4 "terraform-provider-render/internal/client/eventtypes"
	externalRef5 "terraform-provider-render/internal/client/jobs"
	externalRef6 "terraform-provider-render/internal/client/logs"
	externalRef7 "terraform-provider-render/internal/client/maintenance"
	externalRef8 "terraform-provider-render/internal/client/metrics"
	externalRef9 "terraform-provider-render/internal/client/notifications"
	externalRef10 "terraform-provider-render/internal/client/postgres"

	"github.com/oapi-codegen/runtime"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// Defines values for AutoDeploy.
const (
	AutoDeployNo  AutoDeploy = "no"
	AutoDeployYes AutoDeploy = "yes"
)

// Defines values for BuildPlan.
const (
	BuildPlanPerformance BuildPlan = "performance"
	BuildPlanStarter     BuildPlan = "starter"
)

// Defines values for CronJobRunStatus.
const (
	CronJobRunStatusCanceled     CronJobRunStatus = "canceled"
	CronJobRunStatusPending      CronJobRunStatus = "pending"
	CronJobRunStatusSuccessful   CronJobRunStatus = "successful"
	CronJobRunStatusUnsuccessful CronJobRunStatus = "unsuccessful"
)

// Defines values for CustomDomainDomainType.
const (
	CustomDomainDomainTypeApex      CustomDomainDomainType = "apex"
	CustomDomainDomainTypeSubdomain CustomDomainDomainType = "subdomain"
)

// Defines values for CustomDomainVerificationStatus.
const (
	CustomDomainVerificationStatusUnverified CustomDomainVerificationStatus = "unverified"
	CustomDomainVerificationStatusVerified   CustomDomainVerificationStatus = "verified"
)

// Defines values for DatabaseRole.
const (
	Primary DatabaseRole = "primary"
	Replica DatabaseRole = "replica"
)

// Defines values for DatabaseStatus.
const (
	DatabaseStatusAvailable             DatabaseStatus = "available"
	DatabaseStatusConfigRestart         DatabaseStatus = "config_restart"
	DatabaseStatusCreating              DatabaseStatus = "creating"
	DatabaseStatusMaintenanceInProgress DatabaseStatus = "maintenance_in_progress"
	DatabaseStatusMaintenanceScheduled  DatabaseStatus = "maintenance_scheduled"
	DatabaseStatusRecoveryFailed        DatabaseStatus = "recovery_failed"
	DatabaseStatusRecoveryInProgress    DatabaseStatus = "recovery_in_progress"
	DatabaseStatusSuspended             DatabaseStatus = "suspended"
	DatabaseStatusUnavailable           DatabaseStatus = "unavailable"
	DatabaseStatusUnknown               DatabaseStatus = "unknown"
	DatabaseStatusUpdatingInstance      DatabaseStatus = "updating_instance"
)

// Defines values for DeployTrigger.
const (
	DeployTriggerApi              DeployTrigger = "api"
	DeployTriggerBlueprintSync    DeployTrigger = "blueprint_sync"
	DeployTriggerDeployHook       DeployTrigger = "deploy_hook"
	DeployTriggerDeployedByRender DeployTrigger = "deployed_by_render"
	DeployTriggerManual           DeployTrigger = "manual"
	DeployTriggerNewCommit        DeployTrigger = "new_commit"
	DeployTriggerOther            DeployTrigger = "other"
	DeployTriggerRollback         DeployTrigger = "rollback"
	DeployTriggerServiceResumed   DeployTrigger = "service_resumed"
	DeployTriggerServiceUpdated   DeployTrigger = "service_updated"
)

// Defines values for DeployStatus.
const (
	DeployStatusBuildFailed         DeployStatus = "build_failed"
	DeployStatusBuildInProgress     DeployStatus = "build_in_progress"
	DeployStatusCanceled            DeployStatus = "canceled"
	DeployStatusCreated             DeployStatus = "created"
	DeployStatusDeactivated         DeployStatus = "deactivated"
	DeployStatusLive                DeployStatus = "live"
	DeployStatusPreDeployFailed     DeployStatus = "pre_deploy_failed"
	DeployStatusPreDeployInProgress DeployStatus = "pre_deploy_in_progress"
	DeployStatusUpdateFailed        DeployStatus = "update_failed"
	DeployStatusUpdateInProgress    DeployStatus = "update_in_progress"
)

// Defines values for KeyValuePlan.
const (
	KeyValuePlanCustom   KeyValuePlan = "custom"
	KeyValuePlanFree     KeyValuePlan = "free"
	KeyValuePlanPro      KeyValuePlan = "pro"
	KeyValuePlanProPlus  KeyValuePlan = "pro_plus"
	KeyValuePlanStandard KeyValuePlan = "standard"
	KeyValuePlanStarter  KeyValuePlan = "starter"
)

// Defines values for MaxmemoryPolicy.
const (
	AllkeysLfu     MaxmemoryPolicy = "allkeys_lfu"
	AllkeysLru     MaxmemoryPolicy = "allkeys_lru"
	AllkeysRandom  MaxmemoryPolicy = "allkeys_random"
	Noeviction     MaxmemoryPolicy = "noeviction"
	VolatileLfu    MaxmemoryPolicy = "volatile_lfu"
	VolatileLru    MaxmemoryPolicy = "volatile_lru"
	VolatileRandom MaxmemoryPolicy = "volatile_random"
	VolatileTtl    MaxmemoryPolicy = "volatile_ttl"
)

// Defines values for NotifySetting.
const (
	Default NotifySetting = "default"
	Ignore  NotifySetting = "ignore"
	Notify  NotifySetting = "notify"
)

// Defines values for OwnerType.
const (
	OwnerTypeTeam OwnerType = "team"
	OwnerTypeUser OwnerType = "user"
)

// Defines values for PaidPlan.
const (
	PaidPlanPro      PaidPlan = "pro"
	PaidPlanProMax   PaidPlan = "pro_max"
	PaidPlanProPlus  PaidPlan = "pro_plus"
	PaidPlanProUltra PaidPlan = "pro_ultra"
	PaidPlanStandard PaidPlan = "standard"
	PaidPlanStarter  PaidPlan = "starter"
)

// Defines values for Plan.
const (
	PlanCustom       Plan = "custom"
	PlanFree         Plan = "free"
	PlanPro          Plan = "pro"
	PlanProMax       Plan = "pro_max"
	PlanProPlus      Plan = "pro_plus"
	PlanProUltra     Plan = "pro_ultra"
	PlanStandard     Plan = "standard"
	PlanStandardPlus Plan = "standard_plus"
	PlanStarter      Plan = "starter"
	PlanStarterPlus  Plan = "starter_plus"
)

// Defines values for PostgresSuspended.
const (
	PostgresSuspendedNotSuspended PostgresSuspended = "not_suspended"
	PostgresSuspendedSuspended    PostgresSuspended = "suspended"
)

// Defines values for PostgresDetailSuspended.
const (
	PostgresDetailSuspendedNotSuspended PostgresDetailSuspended = "not_suspended"
	PostgresDetailSuspendedSuspended    PostgresDetailSuspended = "suspended"
)

// Defines values for PostgresVersion.
const (
	N11 PostgresVersion = "11"
	N12 PostgresVersion = "12"
	N13 PostgresVersion = "13"
	N14 PostgresVersion = "14"
	N15 PostgresVersion = "15"
	N16 PostgresVersion = "16"
)

// Defines values for PreviewsGeneration.
const (
	PreviewsGenerationAutomatic PreviewsGeneration = "automatic"
	PreviewsGenerationManual    PreviewsGeneration = "manual"
	PreviewsGenerationOff       PreviewsGeneration = "off"
)

// Defines values for ProtectedStatus.
const (
	Protected   ProtectedStatus = "protected"
	Unprotected ProtectedStatus = "unprotected"
)

// Defines values for PullRequestPreviewsEnabled.
const (
	PullRequestPreviewsEnabledNo  PullRequestPreviewsEnabled = "no"
	PullRequestPreviewsEnabledYes PullRequestPreviewsEnabled = "yes"
)

// Defines values for RedisPlan.
const (
	RedisPlanCustom   RedisPlan = "custom"
	RedisPlanFree     RedisPlan = "free"
	RedisPlanPro      RedisPlan = "pro"
	RedisPlanProPlus  RedisPlan = "pro_plus"
	RedisPlanStandard RedisPlan = "standard"
	RedisPlanStarter  RedisPlan = "starter"
)

// Defines values for Region.
const (
	Frankfurt Region = "frankfurt"
	Ohio      Region = "ohio"
	Oregon    Region = "oregon"
	Singapore Region = "singapore"
	Virginia  Region = "virginia"
)

// Defines values for RegistryCredentialRegistry.
const (
	AWSECR         RegistryCredentialRegistry = "AWS_ECR"
	DOCKER         RegistryCredentialRegistry = "DOCKER"
	GITHUB         RegistryCredentialRegistry = "GITHUB"
	GITLAB         RegistryCredentialRegistry = "GITLAB"
	GOOGLEARTIFACT RegistryCredentialRegistry = "GOOGLE_ARTIFACT"
)

// Defines values for RouteType.
const (
	RouteTypeRedirect RouteType = "redirect"
	RouteTypeRewrite  RouteType = "rewrite"
)

// Defines values for ServerPortProtocol.
const (
	TCP ServerPortProtocol = "TCP"
	UDP ServerPortProtocol = "UDP"
)

// Defines values for ServiceSuspended.
const (
	ServiceSuspendedNotSuspended ServiceSuspended = "not_suspended"
	ServiceSuspendedSuspended    ServiceSuspended = "suspended"
)

// Defines values for ServiceEnv.
const (
	ServiceEnvDocker ServiceEnv = "docker"
	ServiceEnvElixir ServiceEnv = "elixir"
	ServiceEnvGo     ServiceEnv = "go"
	ServiceEnvImage  ServiceEnv = "image"
	ServiceEnvNode   ServiceEnv = "node"
	ServiceEnvPython ServiceEnv = "python"
	ServiceEnvRuby   ServiceEnv = "ruby"
	ServiceEnvRust   ServiceEnv = "rust"
)

// Defines values for ServiceLinkDestinationType.
const (
	ServiceLinkDestinationTypeDatabase ServiceLinkDestinationType = "database"
	ServiceLinkDestinationTypeRedis    ServiceLinkDestinationType = "redis"
)

// Defines values for ServiceLinkEnvVarKeyType.
const (
	ServiceLinkEnvVarKeyTypeCONNECTIONSTRINGKEY ServiceLinkEnvVarKeyType = "CONNECTION_STRING_KEY"
)

// Defines values for ServiceLinkEnvVarKeyKeyType.
const (
	ServiceLinkEnvVarKeyKeyTypeCONNECTIONSTRINGKEY ServiceLinkEnvVarKeyKeyType = "CONNECTION_STRING_KEY"
)

// Defines values for ServiceLinkSourceType.
const (
	ServiceLinkSourceTypeService ServiceLinkSourceType = "service"
)

// Defines values for ServiceRuntime.
const (
	ServiceRuntimeDocker ServiceRuntime = "docker"
	ServiceRuntimeElixir ServiceRuntime = "elixir"
	ServiceRuntimeGo     ServiceRuntime = "go"
	ServiceRuntimeImage  ServiceRuntime = "image"
	ServiceRuntimeNode   ServiceRuntime = "node"
	ServiceRuntimePython ServiceRuntime = "python"
	ServiceRuntimeRuby   ServiceRuntime = "ruby"
	ServiceRuntimeRust   ServiceRuntime = "rust"
)

// Defines values for ServiceType.
const (
	BackgroundWorker ServiceType = "background_worker"
	CronJob          ServiceType = "cron_job"
	PrivateService   ServiceType = "private_service"
	StaticSite       ServiceType = "static_site"
	WebService       ServiceType = "web_service"
)

// Defines values for ServiceTypeShort.
const (
	Cron   ServiceTypeShort = "cron"
	Pserv  ServiceTypeShort = "pserv"
	Static ServiceTypeShort = "static"
	Web    ServiceTypeShort = "web"
	Worker ServiceTypeShort = "worker"
)

// Defines values for SuspenderType.
const (
	SuspenderTypeAdmin         SuspenderType = "admin"
	SuspenderTypeBilling       SuspenderType = "billing"
	SuspenderTypeParentService SuspenderType = "parent_service"
	SuspenderTypeUnknown       SuspenderType = "unknown"
	SuspenderTypeUser          SuspenderType = "user"
)

// Defines values for ListLogsValuesParamsLabel.
const (
	Host       ListLogsValuesParamsLabel = "host"
	Instance   ListLogsValuesParamsLabel = "instance"
	Level      ListLogsValuesParamsLabel = "level"
	Method     ListLogsValuesParamsLabel = "method"
	StatusCode ListLogsValuesParamsLabel = "statusCode"
	Type       ListLogsValuesParamsLabel = "type"
)

// Defines values for ListPostgresParamsSuspended.
const (
	ListPostgresParamsSuspendedNotSuspended ListPostgresParamsSuspended = "not_suspended"
	ListPostgresParamsSuspendedSuspended    ListPostgresParamsSuspended = "suspended"
)

// Defines values for ListServicesParamsSuspended.
const (
	ListServicesParamsSuspendedNotSuspended ListServicesParamsSuspended = "not_suspended"
	ListServicesParamsSuspendedSuspended    ListServicesParamsSuspended = "suspended"
)

// Defines values for ListCustomDomainsParamsDomainType.
const (
	ListCustomDomainsParamsDomainTypeApex      ListCustomDomainsParamsDomainType = "apex"
	ListCustomDomainsParamsDomainTypeSubdomain ListCustomDomainsParamsDomainType = "subdomain"
)

// Defines values for ListCustomDomainsParamsVerificationStatus.
const (
	ListCustomDomainsParamsVerificationStatusUnverified ListCustomDomainsParamsVerificationStatus = "unverified"
	ListCustomDomainsParamsVerificationStatusVerified   ListCustomDomainsParamsVerificationStatus = "verified"
)

// Defines values for CreateDeployJSONBodyClearCache.
const (
	Clear      CreateDeployJSONBodyClearCache = "clear"
	DoNotClear CreateDeployJSONBodyClearCache = "do_not_clear"
)

// Defines values for ListJobParamsStatus.
const (
	Failed    ListJobParamsStatus = "failed"
	Pending   ListJobParamsStatus = "pending"
	Running   ListJobParamsStatus = "running"
	Succeeded ListJobParamsStatus = "succeeded"
)

// Defines values for ListRoutesParamsType.
const (
	ListRoutesParamsTypeRedirect ListRoutesParamsType = "redirect"
	ListRoutesParamsTypeRewrite  ListRoutesParamsType = "rewrite"
)

// AddUpdateEnvVarInput defines model for addUpdateEnvVarInput.
type AddUpdateEnvVarInput struct {
	union json.RawMessage
}

// AutoDeploy defines model for autoDeploy.
type AutoDeploy string

// BackgroundWorkerDetails defines model for backgroundWorkerDetails.
type BackgroundWorkerDetails struct {
	Autoscaling *externalRef0.AutoscalingConfig `json:"autoscaling,omitempty"`
	BuildPlan   BuildPlan                       `json:"buildPlan"`
	Disk        *externalRef2.Disk              `json:"disk,omitempty"`

	// Env This field has been deprecated, runtime should be used in its place.
	// Deprecated:
	Env                ServiceEnv         `json:"env"`
	EnvSpecificDetails EnvSpecificDetails `json:"envSpecificDetails"`

	// MaxShutdownDelaySeconds The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.
	MaxShutdownDelaySeconds *MaxShutdownDelaySeconds `json:"maxShutdownDelaySeconds,omitempty"`

	// NumInstances For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service.
	NumInstances int       `json:"numInstances"`
	ParentServer *Resource `json:"parentServer,omitempty"`

	// Plan The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
	Plan     Plan      `json:"plan"`
	Previews *Previews `json:"previews,omitempty"`

	// PullRequestPreviewsEnabled This field has been deprecated. previews.generation should be used in its place.
	// Deprecated:
	PullRequestPreviewsEnabled *PullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled,omitempty"`

	// Region Defaults to "oregon"
	Region Region `json:"region"`

	// Runtime Runtime
	Runtime ServiceRuntime `json:"runtime"`

	// SshAddress The SSH address for the service. Only present for services that have SSH enabled.
	SshAddress *SshAddress `json:"sshAddress,omitempty"`
}

// BackgroundWorkerDetailsPATCH defines model for backgroundWorkerDetailsPATCH.
type BackgroundWorkerDetailsPATCH struct {
	EnvSpecificDetails *EnvSpecificDetailsPATCH `json:"envSpecificDetails,omitempty"`

	// MaxShutdownDelaySeconds The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.
	MaxShutdownDelaySeconds *MaxShutdownDelaySeconds `json:"maxShutdownDelaySeconds,omitempty"`

	// Plan Defaults to "starter"
	Plan             *PaidPlan `json:"plan,omitempty"`
	PreDeployCommand *string   `json:"preDeployCommand,omitempty"`
	Previews         *Previews `json:"previews,omitempty"`

	// PullRequestPreviewsEnabled This field has been deprecated. previews.generation should be used in its place.
	// Deprecated:
	PullRequestPreviewsEnabled *PullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled,omitempty"`

	// Runtime Runtime
	Runtime *ServiceRuntime `json:"runtime,omitempty"`
}

// BackgroundWorkerDetailsPOST defines model for backgroundWorkerDetailsPOST.
type BackgroundWorkerDetailsPOST struct {
	Autoscaling *externalRef0.AutoscalingConfig `json:"autoscaling,omitempty"`
	Disk        *ServiceDisk                    `json:"disk,omitempty"`

	// Env This field has been deprecated, runtime should be used in its place.
	// Deprecated:
	Env                *ServiceEnv             `json:"env,omitempty"`
	EnvSpecificDetails *EnvSpecificDetailsPOST `json:"envSpecificDetails,omitempty"`

	// MaxShutdownDelaySeconds The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.
	MaxShutdownDelaySeconds *MaxShutdownDelaySeconds `json:"maxShutdownDelaySeconds,omitempty"`

	// NumInstances Defaults to 1
	NumInstances *int `json:"numInstances,omitempty"`

	// Plan Defaults to "starter"
	Plan             *PaidPlan `json:"plan,omitempty"`
	PreDeployCommand *string   `json:"preDeployCommand,omitempty"`
	Previews         *Previews `json:"previews,omitempty"`

	// PullRequestPreviewsEnabled This field has been deprecated. previews.generation should be used in its place.
	// Deprecated:
	PullRequestPreviewsEnabled *PullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled,omitempty"`

	// Region Defaults to "oregon"
	Region *Region `json:"region,omitempty"`

	// Runtime Runtime
	Runtime ServiceRuntime `json:"runtime"`
}

// BlueprintWithCursor A blueprint with a cursor
type BlueprintWithCursor struct {
	Blueprint externalRef1.Blueprint `json:"blueprint"`
	Cursor    Cursor                 `json:"cursor"`
}

// BuildFilter defines model for buildFilter.
type BuildFilter struct {
	IgnoredPaths []string `json:"ignoredPaths"`
	Paths        []string `json:"paths"`
}

// BuildPlan defines model for buildPlan.
type BuildPlan string

// CidrBlockAndDescription defines model for cidrBlockAndDescription.
type CidrBlockAndDescription struct {
	CidrBlock string `json:"cidrBlock"`

	// Description User-provided description of the CIDR block
	Description string `json:"description"`
}

// CronJobDetails defines model for cronJobDetails.
type CronJobDetails struct {
	BuildPlan BuildPlan `json:"buildPlan"`

	// Env This field has been deprecated, runtime should be used in its place.
	// Deprecated:
	Env                 ServiceEnv         `json:"env"`
	EnvSpecificDetails  EnvSpecificDetails `json:"envSpecificDetails"`
	LastSuccessfulRunAt *time.Time         `json:"lastSuccessfulRunAt,omitempty"`

	// Plan The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
	Plan Plan `json:"plan"`

	// Region Defaults to "oregon"
	Region Region `json:"region"`

	// Runtime Runtime
	Runtime  ServiceRuntime `json:"runtime"`
	Schedule string         `json:"schedule"`
}

// CronJobDetailsPATCH defines model for cronJobDetailsPATCH.
type CronJobDetailsPATCH struct {
	EnvSpecificDetails *EnvSpecificDetailsPATCH `json:"envSpecificDetails,omitempty"`

	// Plan Defaults to "starter"
	Plan *PaidPlan `json:"plan,omitempty"`

	// Runtime Runtime
	Runtime  *ServiceRuntime `json:"runtime,omitempty"`
	Schedule *string         `json:"schedule,omitempty"`
}

// CronJobDetailsPOST defines model for cronJobDetailsPOST.
type CronJobDetailsPOST struct {
	// Env This field has been deprecated, runtime should be used in its place.
	// Deprecated:
	Env                *ServiceEnv         `json:"env,omitempty"`
	EnvSpecificDetails *EnvSpecificDetails `json:"envSpecificDetails,omitempty"`

	// Plan Defaults to "starter"
	Plan *PaidPlan `json:"plan,omitempty"`

	// Region Defaults to "oregon"
	Region *Region `json:"region,omitempty"`

	// Runtime Runtime
	Runtime  ServiceRuntime `json:"runtime"`
	Schedule string         `json:"schedule"`
}

// CronJobRun A run of a cron job
type CronJobRun struct {
	// CanceledBy user who cancelled the cron job run
	CanceledBy *string    `json:"canceledBy,omitempty"`
	FinishedAt *time.Time `json:"finishedAt,omitempty"`

	// Id The ID of the run
	Id        string           `json:"id"`
	StartedAt *time.Time       `json:"startedAt,omitempty"`
	Status    CronJobRunStatus `json:"status"`

	// TriggeredBy user who triggered the cron job run
	TriggeredBy *string `json:"triggeredBy,omitempty"`
}

// CronJobRunStatus defines model for CronJobRun.Status.
type CronJobRunStatus string

// Cursor defines model for cursor.
type Cursor = string

// CustomDomain defines model for customDomain.
type CustomDomain struct {
	CreatedAt       time.Time              `json:"createdAt"`
	DomainType      CustomDomainDomainType `json:"domainType"`
	Id              string                 `json:"id"`
	Name            string                 `json:"name"`
	PublicSuffix    string                 `json:"publicSuffix"`
	RedirectForName string                 `json:"redirectForName"`
	Server          *struct {
		Id   *string `json:"id,omitempty"`
		Name *string `json:"name,omitempty"`
	} `json:"server,omitempty"`
	VerificationStatus CustomDomainVerificationStatus `json:"verificationStatus"`
}

// CustomDomainDomainType defines model for CustomDomain.DomainType.
type CustomDomainDomainType string

// CustomDomainVerificationStatus defines model for CustomDomain.VerificationStatus.
type CustomDomainVerificationStatus string

// CustomDomainWithCursor defines model for customDomainWithCursor.
type CustomDomainWithCursor struct {
	Cursor       Cursor       `json:"cursor"`
	CustomDomain CustomDomain `json:"customDomain"`
}

// DatabaseRole defines model for databaseRole.
type DatabaseRole string

// DatabaseStatus defines model for databaseStatus.
type DatabaseStatus string

// Deploy defines model for deploy.
type Deploy struct {
	Commit *struct {
		CreatedAt *time.Time `json:"createdAt,omitempty"`
		Id        *string    `json:"id,omitempty"`
		Message   *string    `json:"message,omitempty"`
	} `json:"commit,omitempty"`
	CreatedAt  *time.Time `json:"createdAt,omitempty"`
	FinishedAt *time.Time `json:"finishedAt,omitempty"`
	Id         string     `json:"id"`

	// Image Image information used when creating the deploy. Not present for Git-backed deploys
	Image *struct {
		// Ref Image reference used when creating the deploy
		Ref *string `json:"ref,omitempty"`

		// RegistryCredential Name of credential used to pull the image, if provided
		RegistryCredential *string `json:"registryCredential,omitempty"`

		// Sha SHA that the image reference was resolved to when creating the deploy
		Sha *string `json:"sha,omitempty"`
	} `json:"image,omitempty"`
	Status    *DeployStatus  `json:"status,omitempty"`
	Trigger   *DeployTrigger `json:"trigger,omitempty"`
	UpdatedAt *time.Time     `json:"updatedAt,omitempty"`
}

// DeployTrigger defines model for Deploy.Trigger.
type DeployTrigger string

// DeployList defines model for deployList.
type DeployList = []DeployWithCursor

// DeployStatus defines model for deployStatus.
type DeployStatus string

// DeployWithCursor defines model for deployWithCursor.
type DeployWithCursor struct {
	Cursor *Cursor `json:"cursor,omitempty"`
	Deploy *Deploy `json:"deploy,omitempty"`
}

// DiskSnapshot defines model for diskSnapshot.
type DiskSnapshot struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`

	// InstanceId When a service with a disk is scaled, the instanceId is used to identify the instance that the disk is attached to. Each instance's disks get their own snapshots, and can be restored separately.
	InstanceId  *InstanceId `json:"instanceId,omitempty"`
	SnapshotKey *string     `json:"snapshotKey,omitempty"`
}

// DiskWithCursor defines model for diskWithCursor.
type DiskWithCursor struct {
	Cursor Cursor                   `json:"cursor"`
	Disk   externalRef2.DiskDetails `json:"disk"`
}

// DockerDetails defines model for dockerDetails.
type DockerDetails struct {
	DockerCommand      string              `json:"dockerCommand"`
	DockerContext      string              `json:"dockerContext"`
	DockerfilePath     string              `json:"dockerfilePath"`
	PreDeployCommand   *string             `json:"preDeployCommand,omitempty"`
	RegistryCredential *RegistryCredential `json:"registryCredential,omitempty"`
}

// DockerDetailsPATCH defines model for dockerDetailsPATCH.
type DockerDetailsPATCH struct {
	DockerCommand        *string `json:"dockerCommand,omitempty"`
	DockerContext        *string `json:"dockerContext,omitempty"`
	DockerfilePath       *string `json:"dockerfilePath,omitempty"`
	RegistryCredentialId *string `json:"registryCredentialId,omitempty"`
}

// DockerDetailsPOST defines model for dockerDetailsPOST.
type DockerDetailsPOST struct {
	DockerCommand *string `json:"dockerCommand,omitempty"`
	DockerContext *string `json:"dockerContext,omitempty"`

	// DockerfilePath Defaults to "./Dockerfile"
	DockerfilePath       *string `json:"dockerfilePath,omitempty"`
	RegistryCredentialId *string `json:"registryCredentialId,omitempty"`
}

// EnvGroup defines model for envGroup.
type EnvGroup struct {
	CreatedAt     time.Time    `json:"createdAt"`
	EnvVars       []EnvVar     `json:"envVars"`
	EnvironmentId *string      `json:"environmentId,omitempty"`
	Id            string       `json:"id"`
	Name          string       `json:"name"`
	OwnerId       string       `json:"ownerId"`
	SecretFiles   []SecretFile `json:"secretFiles"`

	// ServiceLinks List of serviceIds linked to the envGroup
	ServiceLinks []EnvGroupLink `json:"serviceLinks"`
	UpdatedAt    time.Time      `json:"updatedAt"`
}

// EnvGroupLink defines model for envGroupLink.
type EnvGroupLink struct {
	Id   string           `json:"id"`
	Name string           `json:"name"`
	Type ServiceTypeShort `json:"type"`
}

// EnvGroupMeta defines model for envGroupMeta.
type EnvGroupMeta struct {
	CreatedAt     time.Time `json:"createdAt"`
	EnvironmentId *string   `json:"environmentId,omitempty"`
	Id            string    `json:"id"`
	Name          string    `json:"name"`
	OwnerId       string    `json:"ownerId"`

	// ServiceLinks List of serviceIds linked to the envGroup
	ServiceLinks []EnvGroupLink `json:"serviceLinks"`
	UpdatedAt    time.Time      `json:"updatedAt"`
}

// EnvGroupPATCHInput defines model for envGroupPATCHInput.
type EnvGroupPATCHInput struct {
	Name string `json:"name"`
}

// EnvGroupPOSTInput defines model for envGroupPOSTInput.
type EnvGroupPOSTInput struct {
	EnvVars       EnvVarInputArray   `json:"envVars"`
	EnvironmentId *string            `json:"environmentId,omitempty"`
	Name          string             `json:"name"`
	OwnerId       string             `json:"ownerId"`
	SecretFiles   *[]SecretFileInput `json:"secretFiles,omitempty"`
	ServiceIds    *[]string          `json:"serviceIds,omitempty"`
}

// EnvSpecificDetails defines model for envSpecificDetails.
type EnvSpecificDetails struct {
	union json.RawMessage
}

// EnvSpecificDetailsPATCH defines model for envSpecificDetailsPATCH.
type EnvSpecificDetailsPATCH struct {
	union json.RawMessage
}

// EnvSpecificDetailsPOST defines model for envSpecificDetailsPOST.
type EnvSpecificDetailsPOST struct {
	union json.RawMessage
}

// EnvVar defines model for envVar.
type EnvVar struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// EnvVarGenerateValue defines model for envVarGenerateValue.
type EnvVarGenerateValue struct {
	GenerateValue bool `json:"generateValue"`
}

// EnvVarInput defines model for envVarInput.
type EnvVarInput struct {
	union json.RawMessage
}

// EnvVarInputArray defines model for envVarInputArray.
type EnvVarInputArray = []EnvVarInput

// EnvVarKeyGenerateValue defines model for envVarKeyGenerateValue.
type EnvVarKeyGenerateValue struct {
	GenerateValue bool   `json:"generateValue"`
	Key           string `json:"key"`
}

// EnvVarKeyValue defines model for envVarKeyValue.
type EnvVarKeyValue struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// EnvVarValue defines model for envVarValue.
type EnvVarValue struct {
	Value string `json:"value"`
}

// EnvVarWithCursor defines model for envVarWithCursor.
type EnvVarWithCursor struct {
	Cursor Cursor `json:"cursor"`
	EnvVar EnvVar `json:"envVar"`
}

// Environment defines model for environment.
type Environment struct {
	DatabasesIds []string `json:"databasesIds"`
	EnvGroupIds  []string `json:"envGroupIds"`
	Id           string   `json:"id"`
	Name         string   `json:"name"`

	// NetworkIsolationEnabled Indicates whether network connections across environments are allowed.
	NetworkIsolationEnabled NetworkIsolationEnabled `json:"networkIsolationEnabled"`
	ProjectId               string                  `json:"projectId"`

	// ProtectedStatus Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.
	ProtectedStatus ProtectedStatus `json:"protectedStatus"`
	RedisIds        []string        `json:"redisIds"`
	ServiceIds      []string        `json:"serviceIds"`
}

// EnvironmentPATCHInput defines model for environmentPATCHInput.
type EnvironmentPATCHInput struct {
	Name *string `json:"name,omitempty"`

	// NetworkIsolationEnabled Indicates whether network connections across environments are allowed.
	NetworkIsolationEnabled *NetworkIsolationEnabled `json:"networkIsolationEnabled,omitempty"`

	// ProtectedStatus Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.
	ProtectedStatus *ProtectedStatus `json:"protectedStatus,omitempty"`
}

// EnvironmentPOSTInput defines model for environmentPOSTInput.
type EnvironmentPOSTInput struct {
	Name string `json:"name"`

	// NetworkIsolationEnabled Indicates whether network connections across environments are allowed.
	NetworkIsolationEnabled *NetworkIsolationEnabled `json:"networkIsolationEnabled,omitempty"`
	ProjectId               string                   `json:"projectId"`

	// ProtectedStatus Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.
	ProtectedStatus *ProtectedStatus `json:"protectedStatus,omitempty"`
}

// EnvironmentResourcesPOSTInput defines model for environmentResourcesPOSTInput.
type EnvironmentResourcesPOSTInput struct {
	ResourceIds []string `json:"resourceIds"`
}

// EnvironmentWithCursor An environment with a cursor
type EnvironmentWithCursor struct {
	Cursor      Cursor      `json:"cursor"`
	Environment Environment `json:"environment"`
}

// Error defines model for error.
type Error struct {
	Id      *string `json:"id,omitempty"`
	Message *string `json:"message,omitempty"`
}

// Header defines model for header.
type Header struct {
	Id    string `json:"id"`
	Name  string `json:"name"`
	Path  string `json:"path"`
	Value string `json:"value"`
}

// HeaderInput defines model for headerInput.
type HeaderInput struct {
	// Name Header name
	Name string `json:"name"`

	// Path The request path to add the header to. Wildcards will cause headers to be applied to all matching paths.
	Path string `json:"path"`

	// Value Header value
	Value string `json:"value"`
}

// HeaderWithCursor defines model for headerWithCursor.
type HeaderWithCursor struct {
	Cursor string `json:"cursor"`
	Header Header `json:"header"`
}

// Image defines model for image.
type Image struct {
	// ImagePath Path to the image used for this server (e.g docker.io/library/nginx:latest).
	ImagePath string `json:"imagePath"`

	// OwnerId The ID of the owner for this image. This should match the owner of the service as well as the owner of any specified registry credential.
	OwnerId string `json:"ownerId"`

	// RegistryCredentialId Optional reference to the registry credential passed to the image repository to retrieve this image.
	RegistryCredentialId *string `json:"registryCredentialId,omitempty"`
}

// InstanceId When a service with a disk is scaled, the instanceId is used to identify the instance that the disk is attached to. Each instance's disks get their own snapshots, and can be restored separately.
type InstanceId = string

// JobWithCursor defines model for jobWithCursor.
type JobWithCursor struct {
	Cursor Cursor           `json:"cursor"`
	Job    externalRef5.Job `json:"job"`
}

// KeyValue A Key / Value instance
type KeyValue struct {
	// CreatedAt The creation time of the Key / Value instance
	CreatedAt time.Time `json:"createdAt"`

	// DashboardUrl The URL to view the Key / Value instance in the Render Dashboard
	DashboardUrl string `json:"dashboardUrl"`

	// EnvironmentId The ID of the environment the Key / Value instance is associated with
	EnvironmentId *string `json:"environmentId,omitempty"`

	// Id The ID of the Key / Value instance
	Id string `json:"id"`

	// IpAllowList The IP allow list for the Key / Value instance
	IpAllowList []CidrBlockAndDescription `json:"ipAllowList"`

	// Name The name of the Key / Value instance
	Name string `json:"name"`

	// Options Options for a Key / Value instance
	Options KeyValueOptions `json:"options"`
	Owner   Owner           `json:"owner"`
	Plan    KeyValuePlan    `json:"plan"`

	// Region Defaults to "oregon"
	Region Region         `json:"region"`
	Status DatabaseStatus `json:"status"`

	// UpdatedAt The last updated time of the Key / Value instance
	UpdatedAt time.Time `json:"updatedAt"`

	// Version The version of Key / Value
	Version string `json:"version"`
}

// KeyValueConnectionInfo A Key / Value instance
type KeyValueConnectionInfo struct {
	// CliCommand The CLI (redis-cli or valkey-cli) command to connect to the Key / Value instance
	CliCommand string `json:"cliCommand"`

	// ExternalConnectionString The connection string to use from outside Render
	ExternalConnectionString string `json:"externalConnectionString"`

	// InternalConnectionString The connection string to use from within Render
	InternalConnectionString string `json:"internalConnectionString"`
}

// KeyValueDetail A Key / Value instance
type KeyValueDetail struct {
	// CreatedAt The creation time of the Key / Value instance
	CreatedAt time.Time `json:"createdAt"`

	// EnvironmentId The ID of the environment the Key / Value instance is associated with
	EnvironmentId *string `json:"environmentId,omitempty"`

	// Id The ID of the Key / Value instance
	Id string `json:"id"`

	// IpAllowList The IP allow list for the Key / Value instance
	IpAllowList []CidrBlockAndDescription    `json:"ipAllowList"`
	Maintenance *externalRef7.MaintenanceRun `json:"maintenance,omitempty"`

	// Name The name of the Key / Value instance
	Name string `json:"name"`

	// Options Options for a Key / Value instance
	Options KeyValueOptions `json:"options"`
	Owner   Owner           `json:"owner"`
	Plan    KeyValuePlan    `json:"plan"`

	// Region Defaults to "oregon"
	Region Region         `json:"region"`
	Status DatabaseStatus `json:"status"`

	// UpdatedAt The last updated time of the Key / Value instance
	UpdatedAt time.Time `json:"updatedAt"`

	// Version The version of Key / Value
	Version string `json:"version"`
}

// KeyValueOptions Options for a Key / Value instance
type KeyValueOptions struct {
	MaxmemoryPolicy *string `json:"maxmemoryPolicy,omitempty"`
}

// KeyValuePATCHInput Input type for updating a Key / Value instance
type KeyValuePATCHInput struct {
	IpAllowList *[]CidrBlockAndDescription `json:"ipAllowList,omitempty"`

	// MaxmemoryPolicy The eviction policy for the Key / Value instance
	MaxmemoryPolicy *MaxmemoryPolicy `json:"maxmemoryPolicy,omitempty"`

	// Name The name of the Key / Value instance
	Name *string       `json:"name,omitempty"`
	Plan *KeyValuePlan `json:"plan,omitempty"`
}

// KeyValuePOSTInput Input type for creating a Key / Value instance
type KeyValuePOSTInput struct {
	EnvironmentId *string                    `json:"environmentId,omitempty"`
	IpAllowList   *[]CidrBlockAndDescription `json:"ipAllowList,omitempty"`

	// MaxmemoryPolicy The eviction policy for the Key / Value instance
	MaxmemoryPolicy *MaxmemoryPolicy `json:"maxmemoryPolicy,omitempty"`

	// Name The name of the Key / Value instance
	Name string `json:"name"`

	// OwnerId The ID of the owner of the Key / Value instance
	OwnerId string       `json:"ownerId"`
	Plan    KeyValuePlan `json:"plan"`

	// Region The region where the Key / Value instance is located
	Region *string `json:"region,omitempty"`
}

// KeyValuePlan defines model for keyValuePlan.
type KeyValuePlan string

// KeyValueWithCursor defines model for keyValueWithCursor.
type KeyValueWithCursor struct {
	Cursor Cursor `json:"cursor"`

	// KeyValue A Key / Value instance
	KeyValue KeyValue `json:"keyValue"`
}

// MaintenanceMode defines model for maintenanceMode.
type MaintenanceMode struct {
	Enabled bool `json:"enabled"`

	// Uri The page to be served when [maintenance mode](https://docs.render.com/maintenance-mode) is enabled. When empty, the default maintenance mode page is served.
	Uri string `json:"uri"`
}

// MaxShutdownDelaySeconds The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.
type MaxShutdownDelaySeconds = int

// MaxmemoryPolicy The eviction policy for the Key / Value instance
type MaxmemoryPolicy string

// NativeEnvironmentDetails defines model for nativeEnvironmentDetails.
type NativeEnvironmentDetails struct {
	BuildCommand     string  `json:"buildCommand"`
	PreDeployCommand *string `json:"preDeployCommand,omitempty"`
	StartCommand     string  `json:"startCommand"`
}

// NativeEnvironmentDetailsPATCH defines model for nativeEnvironmentDetailsPATCH.
type NativeEnvironmentDetailsPATCH struct {
	BuildCommand *string `json:"buildCommand,omitempty"`
	StartCommand *string `json:"startCommand,omitempty"`
}

// NativeEnvironmentDetailsPOST Fields for native environment (runtime) services
type NativeEnvironmentDetailsPOST struct {
	BuildCommand string `json:"buildCommand"`
	StartCommand string `json:"startCommand"`
}

// NetworkIsolationEnabled Indicates whether network connections across environments are allowed.
type NetworkIsolationEnabled = bool

// NotificationOverrideWithCursor defines model for notificationOverrideWithCursor.
type NotificationOverrideWithCursor struct {
	Cursor   Cursor                            `json:"cursor"`
	Override externalRef9.NotificationOverride `json:"override"`
}

// NotifySetting defines model for notifySetting.
type NotifySetting string

// Owner defines model for owner.
type Owner struct {
	Email string `json:"email"`
	Id    string `json:"id"`
	Name  string `json:"name"`

	// TwoFactorAuthEnabled Whether two-factor authentication is enabled for the owner. Only present for user owners.
	TwoFactorAuthEnabled *bool     `json:"twoFactorAuthEnabled,omitempty"`
	Type                 OwnerType `json:"type"`
}

// OwnerType defines model for Owner.Type.
type OwnerType string

// OwnerWithCursor defines model for ownerWithCursor.
type OwnerWithCursor struct {
	Cursor *Cursor `json:"cursor,omitempty"`
	Owner  *Owner  `json:"owner,omitempty"`
}

// PaidPlan Defaults to "starter"
type PaidPlan string

// Plan The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
type Plan string

// Postgres defines model for postgres.
type Postgres struct {
	CreatedAt time.Time `json:"createdAt"`

	// DashboardUrl The URL to view the PostgreSQL instance in the Render Dashboard
	DashboardUrl  string  `json:"dashboardUrl"`
	DatabaseName  string  `json:"databaseName"`
	DatabaseUser  string  `json:"databaseUser"`
	DiskSizeGB    *int    `json:"diskSizeGB,omitempty"`
	EnvironmentId *string `json:"environmentId,omitempty"`

	// ExpiresAt The time at which the database will be expire. Applies to free tier databases only.
	ExpiresAt               *time.Time                  `json:"expiresAt,omitempty"`
	HighAvailabilityEnabled bool                        `json:"highAvailabilityEnabled"`
	Id                      string                      `json:"id"`
	IpAllowList             []CidrBlockAndDescription   `json:"ipAllowList"`
	Name                    string                      `json:"name"`
	Owner                   Owner                       `json:"owner"`
	Plan                    externalRef10.PostgresPlans `json:"plan"`
	PrimaryPostgresID       *string                     `json:"primaryPostgresID,omitempty"`
	ReadReplicas            ReadReplicas                `json:"readReplicas"`

	// Region Defaults to "oregon"
	Region     Region            `json:"region"`
	Role       DatabaseRole      `json:"role"`
	Status     DatabaseStatus    `json:"status"`
	Suspended  PostgresSuspended `json:"suspended"`
	Suspenders []SuspenderType   `json:"suspenders"`
	UpdatedAt  time.Time         `json:"updatedAt"`

	// Version The PostgreSQL version
	Version PostgresVersion `json:"version"`
}

// PostgresSuspended defines model for Postgres.Suspended.
type PostgresSuspended string

// PostgresConnectionInfo defines model for postgresConnectionInfo.
type PostgresConnectionInfo struct {
	ExternalConnectionString string `json:"externalConnectionString"`
	InternalConnectionString string `json:"internalConnectionString"`
	Password                 string `json:"password"`
	PsqlCommand              string `json:"psqlCommand"`
}

// PostgresDetail defines model for postgresDetail.
type PostgresDetail struct {
	CreatedAt time.Time `json:"createdAt"`

	// DashboardUrl The URL to view the PostgreSQL instance in the Render Dashboard
	DashboardUrl  string  `json:"dashboardUrl"`
	DatabaseName  string  `json:"databaseName"`
	DatabaseUser  string  `json:"databaseUser"`
	DiskSizeGB    *int    `json:"diskSizeGB,omitempty"`
	EnvironmentId *string `json:"environmentId,omitempty"`

	// ExpiresAt The time at which the database will be expire. Applies to free tier databases only.
	ExpiresAt               *time.Time                   `json:"expiresAt,omitempty"`
	HighAvailabilityEnabled bool                         `json:"highAvailabilityEnabled"`
	Id                      string                       `json:"id"`
	IpAllowList             []CidrBlockAndDescription    `json:"ipAllowList"`
	Maintenance             *externalRef7.MaintenanceRun `json:"maintenance,omitempty"`
	Name                    string                       `json:"name"`
	Owner                   Owner                        `json:"owner"`
	Plan                    externalRef10.PostgresPlans  `json:"plan"`
	PrimaryPostgresID       *string                      `json:"primaryPostgresID,omitempty"`
	ReadReplicas            ReadReplicas                 `json:"readReplicas"`

	// Region Defaults to "oregon"
	Region     Region                  `json:"region"`
	Role       DatabaseRole            `json:"role"`
	Status     DatabaseStatus          `json:"status"`
	Suspended  PostgresDetailSuspended `json:"suspended"`
	Suspenders []SuspenderType         `json:"suspenders"`
	UpdatedAt  time.Time               `json:"updatedAt"`

	// Version The PostgreSQL version
	Version PostgresVersion `json:"version"`
}

// PostgresDetailSuspended defines model for PostgresDetail.Suspended.
type PostgresDetailSuspended string

// PostgresPATCHInput defines model for postgresPATCHInput.
type PostgresPATCHInput struct {
	DatadogAPIKey *string `json:"datadogAPIKey,omitempty"`

	// DiskSizeGB The number of gigabytes of disk space to allocate for the database
	DiskSizeGB             *int                         `json:"diskSizeGB,omitempty"`
	EnableHighAvailability *bool                        `json:"enableHighAvailability,omitempty"`
	IpAllowList            *[]CidrBlockAndDescription   `json:"ipAllowList,omitempty"`
	Name                   *string                      `json:"name,omitempty"`
	Plan                   *externalRef10.PostgresPlans `json:"plan,omitempty"`
	ReadReplicas           *ReadReplicasInput           `json:"readReplicas,omitempty"`
}

// PostgresPOSTInput Input for creating a database
type PostgresPOSTInput struct {
	DatabaseName  *string `json:"databaseName,omitempty"`
	DatabaseUser  *string `json:"databaseUser,omitempty"`
	DatadogAPIKey *string `json:"datadogAPIKey,omitempty"`

	// DiskSizeGB The number of gigabytes of disk space to allocate for the database
	DiskSizeGB             *int                       `json:"diskSizeGB,omitempty"`
	EnableHighAvailability *bool                      `json:"enableHighAvailability,omitempty"`
	EnvironmentId          *string                    `json:"environmentId,omitempty"`
	IpAllowList            *[]CidrBlockAndDescription `json:"ipAllowList,omitempty"`

	// Name The name of the database as it will appear in the Render Dashboard
	Name string `json:"name"`

	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId      string                      `json:"ownerId"`
	Plan         externalRef10.PostgresPlans `json:"plan"`
	ReadReplicas *ReadReplicasInput          `json:"readReplicas,omitempty"`
	Region       *string                     `json:"region,omitempty"`

	// Version The PostgreSQL version
	Version PostgresVersion `json:"version"`
}

// PostgresVersion The PostgreSQL version
type PostgresVersion string

// PostgresWithCursor defines model for postgresWithCursor.
type PostgresWithCursor struct {
	Cursor   Cursor   `json:"cursor"`
	Postgres Postgres `json:"postgres"`
}

// PreviewInput defines model for previewInput.
type PreviewInput struct {
	// ImagePath Must be either a full URL or the relative path to an image. If a relative path, Render uses the base service's image URL as its root. For example, if the base service's image URL is `docker.io/library/nginx:latest`, then valid values are: `docker.io/library/nginx:<any tag or SHA>`, `library/nginx:<any tag or SHA>`, or `nginx:<any tag or SHA>`. Note that the path must match (only the tag or SHA can vary).
	ImagePath string `json:"imagePath"`

	// Name A name for the service preview instance. If not specified, Render generates the name using the base service's name and the specified tag or SHA.
	Name *string `json:"name,omitempty"`

	// Plan The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
	Plan *Plan `json:"plan,omitempty"`
}

// Previews defines model for previews.
type Previews struct {
	// Generation Defaults to "off"
	Generation *PreviewsGeneration `json:"generation,omitempty"`
}

// PreviewsGeneration Defaults to "off"
type PreviewsGeneration string

// PrivateServiceDetails defines model for privateServiceDetails.
type PrivateServiceDetails struct {
	Autoscaling *externalRef0.AutoscalingConfig `json:"autoscaling,omitempty"`
	BuildPlan   BuildPlan                       `json:"buildPlan"`
	Disk        *externalRef2.Disk              `json:"disk,omitempty"`

	// Env This field has been deprecated, runtime should be used in its place.
	// Deprecated:
	Env                ServiceEnv         `json:"env"`
	EnvSpecificDetails EnvSpecificDetails `json:"envSpecificDetails"`

	// MaxShutdownDelaySeconds The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.
	MaxShutdownDelaySeconds *MaxShutdownDelaySeconds `json:"maxShutdownDelaySeconds,omitempty"`

	// NumInstances For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service.
	NumInstances int          `json:"numInstances"`
	OpenPorts    []ServerPort `json:"openPorts"`
	ParentServer *Resource    `json:"parentServer,omitempty"`

	// Plan The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
	Plan     Plan      `json:"plan"`
	Previews *Previews `json:"previews,omitempty"`

	// PullRequestPreviewsEnabled This field has been deprecated. previews.generation should be used in its place.
	// Deprecated:
	PullRequestPreviewsEnabled *PullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled,omitempty"`

	// Region Defaults to "oregon"
	Region Region `json:"region"`

	// Runtime Runtime
	Runtime ServiceRuntime `json:"runtime"`

	// SshAddress The SSH address for the service. Only present for services that have SSH enabled.
	SshAddress *SshAddress `json:"sshAddress,omitempty"`
	Url        string      `json:"url"`
}

// PrivateServiceDetailsPATCH defines model for privateServiceDetailsPATCH.
type PrivateServiceDetailsPATCH struct {
	EnvSpecificDetails *EnvSpecificDetailsPATCH `json:"envSpecificDetails,omitempty"`

	// MaxShutdownDelaySeconds The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.
	MaxShutdownDelaySeconds *MaxShutdownDelaySeconds `json:"maxShutdownDelaySeconds,omitempty"`

	// Plan Defaults to "starter"
	Plan             *PaidPlan `json:"plan,omitempty"`
	PreDeployCommand *string   `json:"preDeployCommand,omitempty"`
	Previews         *Previews `json:"previews,omitempty"`

	// PullRequestPreviewsEnabled This field has been deprecated. previews.generation should be used in its place.
	// Deprecated:
	PullRequestPreviewsEnabled *PullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled,omitempty"`

	// Runtime Runtime
	Runtime *ServiceRuntime `json:"runtime,omitempty"`
}

// PrivateServiceDetailsPOST defines model for privateServiceDetailsPOST.
type PrivateServiceDetailsPOST struct {
	Autoscaling *externalRef0.AutoscalingConfig `json:"autoscaling,omitempty"`
	Disk        *ServiceDisk                    `json:"disk,omitempty"`

	// Env This field has been deprecated, runtime should be used in its place.
	// Deprecated:
	Env                *ServiceEnv             `json:"env,omitempty"`
	EnvSpecificDetails *EnvSpecificDetailsPOST `json:"envSpecificDetails,omitempty"`

	// MaxShutdownDelaySeconds The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.
	MaxShutdownDelaySeconds *MaxShutdownDelaySeconds `json:"maxShutdownDelaySeconds,omitempty"`

	// NumInstances Defaults to 1
	NumInstances *int `json:"numInstances,omitempty"`

	// Plan Defaults to "starter"
	Plan             *PaidPlan `json:"plan,omitempty"`
	PreDeployCommand *string   `json:"preDeployCommand,omitempty"`
	Previews         *Previews `json:"previews,omitempty"`

	// PullRequestPreviewsEnabled This field has been deprecated. previews.generation should be used in its place.
	// Deprecated:
	PullRequestPreviewsEnabled *PullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled,omitempty"`

	// Region Defaults to "oregon"
	Region *Region `json:"region,omitempty"`

	// Runtime Runtime
	Runtime ServiceRuntime `json:"runtime"`
}

// Project A project is a collection of environments
type Project struct {
	CreatedAt time.Time `json:"createdAt"`

	// EnvironmentIds The environments associated with the project
	EnvironmentIds []string `json:"environmentIds"`

	// Id The ID of the project
	Id string `json:"id"`

	// Name The name of the project
	Name      string    `json:"name"`
	Owner     Owner     `json:"owner"`
	UpdatedAt time.Time `json:"updatedAt"`
}

// ProjectPATCHInput Input type for updating a project
type ProjectPATCHInput struct {
	Name *string `json:"name,omitempty"`
}

// ProjectPOSTEnvironmentInput defines model for projectPOSTEnvironmentInput.
type ProjectPOSTEnvironmentInput struct {
	Name string `json:"name"`

	// NetworkIsolationEnabled Indicates whether network connections across environments are allowed.
	NetworkIsolationEnabled *NetworkIsolationEnabled `json:"networkIsolationEnabled,omitempty"`

	// ProtectedStatus Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.
	ProtectedStatus *ProtectedStatus `json:"protectedStatus,omitempty"`
}

// ProjectPOSTInput defines model for projectPOSTInput.
type ProjectPOSTInput struct {
	// Environments The environments to create when creating the project
	Environments []ProjectPOSTEnvironmentInput `json:"environments"`

	// Name The name of the project
	Name string `json:"name"`

	// OwnerId The ID of the owner that the project belongs to
	OwnerId string `json:"ownerId"`
}

// ProjectWithCursor defines model for projectWithCursor.
type ProjectWithCursor struct {
	Cursor Cursor `json:"cursor"`

	// Project A project is a collection of environments
	Project Project `json:"project"`
}

// ProtectedStatus Indicates whether an environment is `unprotected` or `protected`. Only admin users can perform destructive actions in `protected` environments.
type ProtectedStatus string

// PullRequestPreviewsEnabled This field has been deprecated. previews.generation should be used in its place.
type PullRequestPreviewsEnabled string

// ReadReplica defines model for readReplica.
type ReadReplica struct {
	// Id The replica instance identifier.
	Id string `json:"id"`

	// Name The display name of the replica instance.
	Name string `json:"name"`
}

// ReadReplicaInput defines model for readReplicaInput.
type ReadReplicaInput struct {
	// Name The display name of the replica instance.
	Name string `json:"name"`
}

// ReadReplicas defines model for readReplicas.
type ReadReplicas = []ReadReplica

// ReadReplicasInput defines model for readReplicasInput.
type ReadReplicasInput = []ReadReplicaInput

// Redis A Redis instance
type Redis struct {
	// CreatedAt The creation time of the Redis instance
	CreatedAt time.Time `json:"createdAt"`

	// DashboardUrl The URL to view the Redis instance in the Render Dashboard
	DashboardUrl string `json:"dashboardUrl"`

	// EnvironmentId The ID of the environment the Redis instance is associated with
	EnvironmentId *string `json:"environmentId,omitempty"`

	// Id The ID of the Redis instance
	Id string `json:"id"`

	// IpAllowList The IP allow list for the Redis instance
	IpAllowList []CidrBlockAndDescription `json:"ipAllowList"`

	// Name The name of the Redis instance
	Name string `json:"name"`

	// Options Options for a Redis instance
	Options RedisOptions `json:"options"`
	Owner   Owner        `json:"owner"`
	Plan    RedisPlan    `json:"plan"`

	// Region Defaults to "oregon"
	Region Region         `json:"region"`
	Status DatabaseStatus `json:"status"`

	// UpdatedAt The last updated time of the Redis instance
	UpdatedAt time.Time `json:"updatedAt"`

	// Version The version of Redis
	Version string `json:"version"`
}

// RedisConnectionInfo A Redis instance
type RedisConnectionInfo struct {
	// ExternalConnectionString The connection string to use from outside Render
	ExternalConnectionString string `json:"externalConnectionString"`

	// InternalConnectionString The connection string to use from within Render
	InternalConnectionString string `json:"internalConnectionString"`

	// RedisCLICommand The Redis CLI command to connect to the Redis instance
	RedisCLICommand string `json:"redisCLICommand"`
}

// RedisDetail A Redis instance
type RedisDetail struct {
	// CreatedAt The creation time of the Redis instance
	CreatedAt time.Time `json:"createdAt"`

	// EnvironmentId The ID of the environment the Redis instance is associated with
	EnvironmentId *string `json:"environmentId,omitempty"`

	// Id The ID of the Redis instance
	Id string `json:"id"`

	// IpAllowList The IP allow list for the Redis instance
	IpAllowList []CidrBlockAndDescription    `json:"ipAllowList"`
	Maintenance *externalRef7.MaintenanceRun `json:"maintenance,omitempty"`

	// Name The name of the Redis instance
	Name string `json:"name"`

	// Options Options for a Redis instance
	Options RedisOptions `json:"options"`
	Owner   Owner        `json:"owner"`
	Plan    RedisPlan    `json:"plan"`

	// Region Defaults to "oregon"
	Region Region         `json:"region"`
	Status DatabaseStatus `json:"status"`

	// UpdatedAt The last updated time of the Redis instance
	UpdatedAt time.Time `json:"updatedAt"`

	// Version The version of Redis
	Version string `json:"version"`
}

// RedisOptions Options for a Redis instance
type RedisOptions struct {
	MaxmemoryPolicy *string `json:"maxmemoryPolicy,omitempty"`
}

// RedisPATCHInput Input type for updating a Redis instance
type RedisPATCHInput struct {
	IpAllowList *[]CidrBlockAndDescription `json:"ipAllowList,omitempty"`

	// MaxmemoryPolicy The eviction policy for the Key / Value instance
	MaxmemoryPolicy *MaxmemoryPolicy `json:"maxmemoryPolicy,omitempty"`

	// Name The name of the Redis instance
	Name *string    `json:"name,omitempty"`
	Plan *RedisPlan `json:"plan,omitempty"`
}

// RedisPOSTInput Input type for creating a Redis instance
type RedisPOSTInput struct {
	EnvironmentId *string                    `json:"environmentId,omitempty"`
	IpAllowList   *[]CidrBlockAndDescription `json:"ipAllowList,omitempty"`

	// MaxmemoryPolicy The eviction policy for the Key / Value instance
	MaxmemoryPolicy *MaxmemoryPolicy `json:"maxmemoryPolicy,omitempty"`

	// Name The name of the Redis instance
	Name string `json:"name"`

	// OwnerId The ID of the owner of the Redis instance
	OwnerId string    `json:"ownerId"`
	Plan    RedisPlan `json:"plan"`

	// Region The region where the Redis instance is located
	Region *string `json:"region,omitempty"`
}

// RedisPlan defines model for redisPlan.
type RedisPlan string

// RedisWithCursor defines model for redisWithCursor.
type RedisWithCursor struct {
	Cursor Cursor `json:"cursor"`

	// Redis A Redis instance
	Redis Redis `json:"redis"`
}

// Region Defaults to "oregon"
type Region string

// RegistryCredential defines model for registryCredential.
type RegistryCredential struct {
	// Id Unique identifier for this credential
	Id string `json:"id"`

	// Name Descriptive name for this credential
	Name string `json:"name"`

	// Registry The registry to use this credential with
	Registry RegistryCredentialRegistry `json:"registry"`

	// UpdatedAt Last updated time for the credential
	UpdatedAt time.Time `json:"updatedAt"`

	// Username The username associated with the credential
	Username string `json:"username"`
}

// RegistryCredentialRegistry The registry to use this credential with
type RegistryCredentialRegistry string

// RegistryCredentialSummary defines model for registryCredentialSummary.
type RegistryCredentialSummary struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// Resource defines model for resource.
type Resource struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// Route defines model for route.
type Route struct {
	Destination string `json:"destination"`
	Id          string `json:"id"`

	// Priority Redirect and Rewrite Rules are applied in priority order starting at 0
	Priority int       `json:"priority"`
	Source   string    `json:"source"`
	Type     RouteType `json:"type"`
}

// RoutePatch defines model for routePatch.
type RoutePatch struct {
	// Priority Redirect and Rewrite Rules are applied in priority order starting at 0. Moves this route to the specified priority and adjusts other route priorities accordingly.
	Priority *int `json:"priority"`
}

// RoutePost defines model for routePost.
type RoutePost struct {
	Destination string `json:"destination"`

	// Priority Redirect and Rewrite Rules are applied in priority order starting at 0. Defaults to last in the priority list.
	Priority *int      `json:"priority,omitempty"`
	Source   string    `json:"source"`
	Type     RouteType `json:"type"`
}

// RoutePut defines model for routePut.
type RoutePut struct {
	Destination string    `json:"destination"`
	Source      string    `json:"source"`
	Type        RouteType `json:"type"`
}

// RouteType defines model for routeType.
type RouteType string

// RouteWithCursor defines model for routeWithCursor.
type RouteWithCursor struct {
	Cursor string `json:"cursor"`
	Route  Route  `json:"route"`
}

// SecretFile defines model for secretFile.
type SecretFile struct {
	Content string `json:"content"`
	Name    string `json:"name"`
}

// SecretFileInput defines model for secretFileInput.
type SecretFileInput struct {
	Content string `json:"content"`
	Name    string `json:"name"`
}

// SecretFileWithCursor defines model for secretFileWithCursor.
type SecretFileWithCursor struct {
	Cursor     Cursor     `json:"cursor"`
	SecretFile SecretFile `json:"secretFile"`
}

// ServerPort defines model for serverPort.
type ServerPort struct {
	Port     int                `json:"port"`
	Protocol ServerPortProtocol `json:"protocol"`
}

// ServerPortProtocol defines model for ServerPort.Protocol.
type ServerPortProtocol string

// Service defines model for service.
type Service struct {
	AutoDeploy  AutoDeploy   `json:"autoDeploy"`
	Branch      *string      `json:"branch,omitempty"`
	BuildFilter *BuildFilter `json:"buildFilter,omitempty"`
	CreatedAt   time.Time    `json:"createdAt"`

	// DashboardUrl The URL to view the service in the Render Dashboard
	DashboardUrl       string                     `json:"dashboardUrl"`
	EnvironmentId      *string                    `json:"environmentId,omitempty"`
	Id                 string                     `json:"id"`
	ImagePath          *string                    `json:"imagePath,omitempty"`
	Name               string                     `json:"name"`
	NotifyOnFail       NotifySetting              `json:"notifyOnFail"`
	OwnerId            string                     `json:"ownerId"`
	RegistryCredential *RegistryCredentialSummary `json:"registryCredential,omitempty"`
	Repo               *string                    `json:"repo,omitempty"`
	RootDir            string                     `json:"rootDir"`
	ServiceDetails     Service_ServiceDetails     `json:"serviceDetails"`
	Slug               string                     `json:"slug"`
	Suspended          ServiceSuspended           `json:"suspended"`
	Suspenders         []SuspenderType            `json:"suspenders"`
	Type               ServiceType                `json:"type"`
	UpdatedAt          time.Time                  `json:"updatedAt"`
}

// Service_ServiceDetails defines model for Service.ServiceDetails.
type Service_ServiceDetails struct {
	union json.RawMessage
}

// ServiceSuspended defines model for Service.Suspended.
type ServiceSuspended string

// ServiceAndDeploy defines model for serviceAndDeploy.
type ServiceAndDeploy struct {
	DeployId *string  `json:"deployId,omitempty"`
	Service  *Service `json:"service,omitempty"`
}

// ServiceDisk defines model for serviceDisk.
type ServiceDisk struct {
	MountPath string `json:"mountPath"`
	Name      string `json:"name"`

	// SizeGB Defaults to 1
	SizeGB *int `json:"sizeGB,omitempty"`
}

// ServiceEnv This field has been deprecated, runtime should be used in its place.
type ServiceEnv string

// ServiceEventWithCursor A service event with a cursor
type ServiceEventWithCursor struct {
	Event externalRef3.ServiceEvent `json:"event"`
}

// ServiceLink A link between a service and a database or Redis instance.
type ServiceLink struct {
	Destination ServiceLinkDestination `json:"destination"`
	EnvVars     []ServiceLinkEnvVar    `json:"envVars"`
	Id          string                 `json:"id"`
	Source      ServiceLinkSource      `json:"source"`
}

// ServiceLinkDestination defines model for serviceLinkDestination.
type ServiceLinkDestination struct {
	ResourceId string                     `json:"resourceId"`
	Type       ServiceLinkDestinationType `json:"type"`
}

// ServiceLinkDestinationType defines model for ServiceLinkDestination.Type.
type ServiceLinkDestinationType string

// ServiceLinkEnvVar defines model for serviceLinkEnvVar.
type ServiceLinkEnvVar struct {
	Key     string                   `json:"key"`
	KeyType ServiceLinkEnvVarKeyType `json:"keyType"`
	Value   *string                  `json:"value,omitempty"`
}

// ServiceLinkEnvVarKeyType defines model for ServiceLinkEnvVar.KeyType.
type ServiceLinkEnvVarKeyType string

// ServiceLinkEnvVarKey defines model for serviceLinkEnvVarKey.
type ServiceLinkEnvVarKey struct {
	Key     string                      `json:"key"`
	KeyType ServiceLinkEnvVarKeyKeyType `json:"keyType"`
}

// ServiceLinkEnvVarKeyKeyType defines model for ServiceLinkEnvVarKey.KeyType.
type ServiceLinkEnvVarKeyKeyType string

// ServiceLinkPATCHInput defines model for serviceLinkPATCHInput.
type ServiceLinkPATCHInput struct {
	EnvVars []ServiceLinkEnvVarKey `json:"envVars"`
}

// ServiceLinkPOSTInput defines model for serviceLinkPOSTInput.
type ServiceLinkPOSTInput struct {
	DestinationId string                 `json:"destinationId"`
	EnvVars       []ServiceLinkEnvVarKey `json:"envVars"`
	SourceId      string                 `json:"sourceId"`
}

// ServiceLinkSource defines model for serviceLinkSource.
type ServiceLinkSource struct {
	ResourceId string                `json:"resourceId"`
	Type       ServiceLinkSourceType `json:"type"`
}

// ServiceLinkSourceType defines model for ServiceLinkSource.Type.
type ServiceLinkSourceType string

// ServiceLinkWithCursor defines model for serviceLinkWithCursor.
type ServiceLinkWithCursor struct {
	Cursor Cursor `json:"cursor"`

	// ServiceLink A link between a service and a database or Redis instance.
	ServiceLink ServiceLink `json:"serviceLink"`
}

// ServiceList defines model for serviceList.
type ServiceList = []ServiceWithCursor

// ServicePATCH defines model for servicePATCH.
type ServicePATCH struct {
	AutoDeploy     *AutoDeploy                  `json:"autoDeploy,omitempty"`
	Branch         *string                      `json:"branch,omitempty"`
	BuildFilter    *BuildFilter                 `json:"buildFilter,omitempty"`
	Image          *Image                       `json:"image,omitempty"`
	Name           *string                      `json:"name,omitempty"`
	Repo           *string                      `json:"repo,omitempty"`
	RootDir        *string                      `json:"rootDir,omitempty"`
	ServiceDetails *ServicePATCH_ServiceDetails `json:"serviceDetails,omitempty"`
}

// ServicePATCH_ServiceDetails defines model for ServicePATCH.ServiceDetails.
type ServicePATCH_ServiceDetails struct {
	union json.RawMessage
}

// ServicePOST defines model for servicePOST.
type ServicePOST struct {
	AutoDeploy *AutoDeploy `json:"autoDeploy,omitempty"`

	// Branch If left empty, this will fall back to the default branch of the repository
	Branch      *string           `json:"branch,omitempty"`
	BuildFilter *BuildFilter      `json:"buildFilter,omitempty"`
	EnvVars     *EnvVarInputArray `json:"envVars,omitempty"`
	Image       *Image            `json:"image,omitempty"`
	Name        string            `json:"name"`
	OwnerId     string            `json:"ownerId"`

	// Repo Do not include the branch in the repo string. You can instead supply a 'branch' parameter.
	Repo           *string                     `json:"repo,omitempty"`
	RootDir        *string                     `json:"rootDir,omitempty"`
	SecretFiles    *[]SecretFileInput          `json:"secretFiles,omitempty"`
	ServiceDetails *ServicePOST_ServiceDetails `json:"serviceDetails,omitempty"`
	Type           ServiceType                 `json:"type"`
}

// ServicePOST_ServiceDetails defines model for ServicePOST.ServiceDetails.
type ServicePOST_ServiceDetails struct {
	union json.RawMessage
}

// ServiceRuntime Runtime
type ServiceRuntime string

// ServiceType defines model for serviceType.
type ServiceType string

// ServiceTypeShort defines model for serviceTypeShort.
type ServiceTypeShort string

// ServiceWithCursor defines model for serviceWithCursor.
type ServiceWithCursor struct {
	Cursor  Cursor  `json:"cursor"`
	Service Service `json:"service"`
}

// SnapshotRestorePOST defines model for snapshotRestorePOST.
type SnapshotRestorePOST struct {
	// InstanceId When a service with a disk is scaled, the instanceId is used to identify the instance that the disk is attached to. Each instance's disks get their own snapshots, and can be restored separately.
	InstanceId  *InstanceId `json:"instanceId,omitempty"`
	SnapshotKey string      `json:"snapshotKey"`
}

// SshAddress The SSH address for the service. Only present for services that have SSH enabled.
type SshAddress = string

// StaticSiteDetails defines model for staticSiteDetails.
type StaticSiteDetails struct {
	BuildCommand string    `json:"buildCommand"`
	BuildPlan    BuildPlan `json:"buildPlan"`
	ParentServer *Resource `json:"parentServer,omitempty"`
	Previews     *Previews `json:"previews,omitempty"`
	PublishPath  string    `json:"publishPath"`

	// PullRequestPreviewsEnabled This field has been deprecated. previews.generation should be used in its place.
	// Deprecated:
	PullRequestPreviewsEnabled *PullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled,omitempty"`
	Url                        string                      `json:"url"`
}

// StaticSiteDetailsPATCH defines model for staticSiteDetailsPATCH.
type StaticSiteDetailsPATCH struct {
	BuildCommand *string   `json:"buildCommand,omitempty"`
	Previews     *Previews `json:"previews,omitempty"`
	PublishPath  *string   `json:"publishPath,omitempty"`

	// PullRequestPreviewsEnabled This field has been deprecated. previews.generation should be used in its place.
	// Deprecated:
	PullRequestPreviewsEnabled *PullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled,omitempty"`
}

// StaticSiteDetailsPOST defines model for staticSiteDetailsPOST.
type StaticSiteDetailsPOST struct {
	BuildCommand *string        `json:"buildCommand,omitempty"`
	Headers      *[]HeaderInput `json:"headers,omitempty"`
	Previews     *Previews      `json:"previews,omitempty"`

	// PublishPath Defaults to "public"
	PublishPath *string `json:"publishPath,omitempty"`

	// PullRequestPreviewsEnabled This field has been deprecated. previews.generation should be used in its place.
	// Deprecated:
	PullRequestPreviewsEnabled *PullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled,omitempty"`
	Routes                     *[]RoutePost                `json:"routes,omitempty"`
}

// SuspenderType defines model for suspenderType.
type SuspenderType string

// SyncWithCursor A blueprint sync with a cursor
type SyncWithCursor struct {
	Cursor Cursor            `json:"cursor"`
	Sync   externalRef1.Sync `json:"sync"`
}

// User defines model for user.
type User struct {
	Email string `json:"email"`
	Name  string `json:"name"`
}

// WebServiceDetails defines model for webServiceDetails.
type WebServiceDetails struct {
	Autoscaling *externalRef0.AutoscalingConfig `json:"autoscaling,omitempty"`
	BuildPlan   BuildPlan                       `json:"buildPlan"`
	Disk        *externalRef2.Disk              `json:"disk,omitempty"`

	// Env This field has been deprecated, runtime should be used in its place.
	// Deprecated:
	Env                ServiceEnv         `json:"env"`
	EnvSpecificDetails EnvSpecificDetails `json:"envSpecificDetails"`
	HealthCheckPath    string             `json:"healthCheckPath"`
	MaintenanceMode    *MaintenanceMode   `json:"maintenanceMode,omitempty"`

	// MaxShutdownDelaySeconds The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.
	MaxShutdownDelaySeconds *MaxShutdownDelaySeconds `json:"maxShutdownDelaySeconds,omitempty"`

	// NumInstances For a *manually* scaled service, this is the number of instances the service is scaled to. DOES NOT indicate the number of running instances for an *autoscaled* service.
	NumInstances int          `json:"numInstances"`
	OpenPorts    []ServerPort `json:"openPorts"`
	ParentServer *Resource    `json:"parentServer,omitempty"`

	// Plan The instance type to use for the preview instance. Note that base services with any paid instance type can't create preview instances with the `free` instance type.
	Plan     Plan      `json:"plan"`
	Previews *Previews `json:"previews,omitempty"`

	// PullRequestPreviewsEnabled This field has been deprecated. previews.generation should be used in its place.
	// Deprecated:
	PullRequestPreviewsEnabled *PullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled,omitempty"`

	// Region Defaults to "oregon"
	Region Region `json:"region"`

	// Runtime Runtime
	Runtime ServiceRuntime `json:"runtime"`

	// SshAddress The SSH address for the service. Only present for services that have SSH enabled.
	SshAddress *SshAddress `json:"sshAddress,omitempty"`
	Url        string      `json:"url"`
}

// WebServiceDetailsPATCH defines model for webServiceDetailsPATCH.
type WebServiceDetailsPATCH struct {
	EnvSpecificDetails *EnvSpecificDetailsPATCH `json:"envSpecificDetails,omitempty"`
	HealthCheckPath    *string                  `json:"healthCheckPath,omitempty"`
	MaintenanceMode    *MaintenanceMode         `json:"maintenanceMode,omitempty"`

	// MaxShutdownDelaySeconds The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.
	MaxShutdownDelaySeconds *MaxShutdownDelaySeconds `json:"maxShutdownDelaySeconds,omitempty"`

	// Plan Defaults to "starter"
	Plan             *PaidPlan `json:"plan,omitempty"`
	PreDeployCommand *string   `json:"preDeployCommand,omitempty"`
	Previews         *Previews `json:"previews,omitempty"`

	// PullRequestPreviewsEnabled This field has been deprecated. previews.generation should be used in its place.
	// Deprecated:
	PullRequestPreviewsEnabled *PullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled,omitempty"`

	// Runtime Runtime
	Runtime *ServiceRuntime `json:"runtime,omitempty"`
}

// WebServiceDetailsPOST defines model for webServiceDetailsPOST.
type WebServiceDetailsPOST struct {
	Autoscaling *externalRef0.AutoscalingConfig `json:"autoscaling,omitempty"`
	Disk        *ServiceDisk                    `json:"disk,omitempty"`

	// Env This field has been deprecated, runtime should be used in its place.
	// Deprecated:
	Env                *ServiceEnv             `json:"env,omitempty"`
	EnvSpecificDetails *EnvSpecificDetailsPOST `json:"envSpecificDetails,omitempty"`
	HealthCheckPath    *string                 `json:"healthCheckPath,omitempty"`
	MaintenanceMode    *MaintenanceMode        `json:"maintenanceMode,omitempty"`

	// MaxShutdownDelaySeconds The maximum amount of time (in seconds) that Render waits for your application process to exit gracefully after sending it a SIGTERM signal.
	MaxShutdownDelaySeconds *MaxShutdownDelaySeconds `json:"maxShutdownDelaySeconds,omitempty"`

	// NumInstances Defaults to 1
	NumInstances *int `json:"numInstances,omitempty"`

	// Plan Defaults to "starter"
	Plan             *PaidPlan `json:"plan,omitempty"`
	PreDeployCommand *string   `json:"preDeployCommand,omitempty"`
	Previews         *Previews `json:"previews,omitempty"`

	// PullRequestPreviewsEnabled This field has been deprecated. previews.generation should be used in its place.
	// Deprecated:
	PullRequestPreviewsEnabled *PullRequestPreviewsEnabled `json:"pullRequestPreviewsEnabled,omitempty"`

	// Region Defaults to "oregon"
	Region *Region `json:"region,omitempty"`

	// Runtime Runtime
	Runtime ServiceRuntime `json:"runtime"`
}

// CreatedAfterParam defines model for createdAfterParam.
type CreatedAfterParam = time.Time

// CreatedBeforeParam defines model for createdBeforeParam.
type CreatedBeforeParam = time.Time

// CronJobIdParam defines model for cronJobIdParam.
type CronJobIdParam = string

// CursorParam defines model for cursorParam.
type CursorParam = string

// CustomDomainIdOrNameParam defines model for customDomainIdOrNameParam.
type CustomDomainIdOrNameParam = string

// DeployIdParam defines model for deployIdParam.
type DeployIdParam = string

// EndTimeParam defines model for endTimeParam.
type EndTimeParam = time.Time

// EnvGroupIdParam defines model for envGroupIdParam.
type EnvGroupIdParam = string

// EnvParam defines model for envParam.
type EnvParam = []ServiceRuntime

// EnvVarKeyParam defines model for envVarKeyParam.
type EnvVarKeyParam = string

// EnvironmentIdParam defines model for environmentIdParam.
type EnvironmentIdParam = []string

// EventTypeParam defines model for eventTypeParam.
type EventTypeParam struct {
	union json.RawMessage
}

// IncludePreviewsParam defines model for includePreviewsParam.
type IncludePreviewsParam = bool

// IncludeReplicasParam defines model for includeReplicasParam.
type IncludeReplicasParam = bool

// LimitParam Defaults to 20
type LimitParam = int

// LinkDestinationParam defines model for linkDestinationParam.
type LinkDestinationParam = []string

// LinkSourceParam defines model for linkSourceParam.
type LinkSourceParam = []string

// NameParam defines model for nameParam.
type NameParam = []string

// OwnerIdParam defines model for ownerIdParam.
type OwnerIdParam = []string

// OwnerIdPathParam defines model for ownerIdPathParam.
type OwnerIdPathParam = string

// ProjectIdParam defines model for projectIdParam.
type ProjectIdParam = []string

// RegionParam defines model for regionParam.
type RegionParam = []Region

// ResourceIdParam defines model for resourceIdParam.
type ResourceIdParam = []string

// SecretFileNameParam defines model for secretFileNameParam.
type SecretFileNameParam = string

// ServiceIdParam defines model for serviceIdParam.
type ServiceIdParam = string

// ServiceIdsParam defines model for serviceIdsParam.
type ServiceIdsParam = []string

// ServiceTypeParam defines model for serviceTypeParam.
type ServiceTypeParam = []ServiceType

// StartTimeParam defines model for startTimeParam.
type StartTimeParam = time.Time

// SuspendedParam defines model for suspendedParam.
type SuspendedParam = []string

// UpdatedAfterParam defines model for updatedAfterParam.
type UpdatedAfterParam = time.Time

// UpdatedBeforeParam defines model for updatedBeforeParam.
type UpdatedBeforeParam = time.Time

// N400BadRequest defines model for 400BadRequest.
type N400BadRequest = Error

// N401Unauthorized defines model for 401Unauthorized.
type N401Unauthorized = Error

// N402PaymentRequired defines model for 402PaymentRequired.
type N402PaymentRequired = Error

// N403Forbidden defines model for 403Forbidden.
type N403Forbidden = Error

// N404NotFound defines model for 404NotFound.
type N404NotFound = Error

// N406NotAcceptable defines model for 406NotAcceptable.
type N406NotAcceptable = Error

// N409Conflict defines model for 409Conflict.
type N409Conflict = Error

// N410Gone defines model for 410Gone.
type N410Gone = Error

// N429RateLimit defines model for 429RateLimit.
type N429RateLimit = Error

// N500InternalServerError defines model for 500InternalServerError.
type N500InternalServerError = Error

// N503ServiceUnavailable defines model for 503ServiceUnavailable.
type N503ServiceUnavailable = Error

// Logs200Response A run of a cron job
type Logs200Response struct {
	// HasMore Ture if there are more logs to fetch
	HasMore bool               `json:"hasMore"`
	Logs    []externalRef6.Log `json:"logs"`

	// NextEndTime The end time to use in the next query to fetch the next set of logs
	NextEndTime time.Time `json:"nextEndTime"`

	// NextStartTime The start time to use in the next query to fetch the next set of logs
	NextStartTime time.Time `json:"nextStartTime"`
}

// LogsValues200Response defines model for LogsValues200Response.
type LogsValues200Response = []string

// ListBlueprintsParams defines parameters for ListBlueprints.
type ListBlueprintsParams struct {
	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListBlueprintSyncsParams defines parameters for ListBlueprintSyncs.
type ListBlueprintSyncsParams struct {
	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListDisksParams defines parameters for ListDisks.
type ListDisksParams struct {
	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// DiskId Filter by disk IDs
	DiskId *externalRef2.DiskIdQuery `form:"diskId,omitempty" json:"diskId,omitempty"`

	// Name Filter by name
	Name *NameParam `form:"name,omitempty" json:"name,omitempty"`

	// CreatedBefore Filter for resources created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *CreatedBeforeParam `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for resources created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *CreatedAfterParam `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// UpdatedBefore Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)
	UpdatedBefore *UpdatedBeforeParam `form:"updatedBefore,omitempty" json:"updatedBefore,omitempty"`

	// UpdatedAfter Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)
	UpdatedAfter *UpdatedAfterParam `form:"updatedAfter,omitempty" json:"updatedAfter,omitempty"`

	// ServiceId Filter for resources by service ID
	ServiceId *ServiceIdsParam `form:"serviceId,omitempty" json:"serviceId,omitempty"`

	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListEnvGroupsParams defines parameters for ListEnvGroups.
type ListEnvGroupsParams struct {
	// Name Filter by name
	Name *NameParam `form:"name,omitempty" json:"name,omitempty"`

	// CreatedBefore Filter for resources created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *CreatedBeforeParam `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for resources created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *CreatedAfterParam `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// UpdatedBefore Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)
	UpdatedBefore *UpdatedBeforeParam `form:"updatedBefore,omitempty" json:"updatedBefore,omitempty"`

	// UpdatedAfter Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)
	UpdatedAfter *UpdatedAfterParam `form:"updatedAfter,omitempty" json:"updatedAfter,omitempty"`

	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// EnvironmentId Filter for resources that belong to an environment
	EnvironmentId *EnvironmentIdParam `form:"environmentId,omitempty" json:"environmentId,omitempty"`

	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// UpdateEnvGroupSecretFileJSONBody defines parameters for UpdateEnvGroupSecretFile.
type UpdateEnvGroupSecretFileJSONBody struct {
	Content *string `json:"content,omitempty"`
}

// ListEnvironmentsParams defines parameters for ListEnvironments.
type ListEnvironmentsParams struct {
	// Name Filter by name
	Name *NameParam `form:"name,omitempty" json:"name,omitempty"`

	// ProjectId Filter for resources that belong to a project
	ProjectId ProjectIdParam `form:"projectId" json:"projectId"`

	// CreatedBefore Filter for resources created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *CreatedBeforeParam `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for resources created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *CreatedAfterParam `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// UpdatedBefore Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)
	UpdatedBefore *UpdatedBeforeParam `form:"updatedBefore,omitempty" json:"updatedBefore,omitempty"`

	// UpdatedAfter Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)
	UpdatedAfter *UpdatedAfterParam `form:"updatedAfter,omitempty" json:"updatedAfter,omitempty"`

	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// EnvironmentId Filter for resources that belong to an environment
	EnvironmentId *EnvironmentIdParam `form:"environmentId,omitempty" json:"environmentId,omitempty"`

	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// RemoveResourcesFromEnvironmentParams defines parameters for RemoveResourcesFromEnvironment.
type RemoveResourcesFromEnvironmentParams struct {
	ResourceIds []string `form:"resourceIds" json:"resourceIds"`
}

// ListKeyValueParams defines parameters for ListKeyValue.
type ListKeyValueParams struct {
	// Name Filter by name
	Name *NameParam `form:"name,omitempty" json:"name,omitempty"`

	// Region Filter by resource region
	Region *RegionParam `form:"region,omitempty" json:"region,omitempty"`

	// CreatedBefore Filter for resources created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *CreatedBeforeParam `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for resources created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *CreatedAfterParam `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// UpdatedBefore Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)
	UpdatedBefore *UpdatedBeforeParam `form:"updatedBefore,omitempty" json:"updatedBefore,omitempty"`

	// UpdatedAfter Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)
	UpdatedAfter *UpdatedAfterParam `form:"updatedAfter,omitempty" json:"updatedAfter,omitempty"`

	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// EnvironmentId Filter for resources that belong to an environment
	EnvironmentId *EnvironmentIdParam `form:"environmentId,omitempty" json:"environmentId,omitempty"`

	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListLogsParams defines parameters for ListLogs.
type ListLogsParams struct {
	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId string `form:"ownerId" json:"ownerId"`

	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// Direction The direction to query logs for. Backward will return most recent logs first.
	// Forward will start with the oldest logs in the time range.
	Direction *externalRef6.LogDirectionParam `form:"direction,omitempty" json:"direction,omitempty"`

	// Resource Filter logs by their resource. A resource is the id of a server, cronjob, job, postgres, or redis.
	Resource externalRef6.LogFilterResource `form:"resource" json:"resource"`

	// Instance Filter logs by the instance they were emitted from. An instance is the id of a specific running server.
	Instance *externalRef6.LogFilterInstance `form:"instance,omitempty" json:"instance,omitempty"`

	// Host Filter request logs by their host. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported.
	Host *externalRef6.LogFilterHost `form:"host,omitempty" json:"host,omitempty"`

	// StatusCode Filter request logs by their status code. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported.
	StatusCode *externalRef6.LogFilterStatusCode `form:"statusCode,omitempty" json:"statusCode,omitempty"`

	// Method Filter request logs by their requests method. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported.
	Method *externalRef6.LogFilterMethod `form:"method,omitempty" json:"method,omitempty"`

	// Level Filter logs by their severity level. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported.
	Level *externalRef6.LogFilterLevel `form:"level,omitempty" json:"level,omitempty"`

	// Type Filter logs by their type. Types include `app` for application logs, `request` for request logs, and `build` for build logs. You can find the full set of types available for a query by using the `GET /logs/values` endpoint.
	Type *externalRef6.LogFilterType `form:"type,omitempty" json:"type,omitempty"`

	// Text Filter by the text of the logs. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported.
	Text *externalRef6.LogFilterText `form:"text,omitempty" json:"text,omitempty"`

	// Path Filter request logs by their path. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported.
	Path *externalRef6.LogFilterPath `form:"path,omitempty" json:"path,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListResourceLogStreamsParams defines parameters for ListResourceLogStreams.
type ListResourceLogStreamsParams struct {
	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// LogStreamId Filter log streams by their id.
	LogStreamId *externalRef6.LogStreamIdFilter `form:"logStreamId,omitempty" json:"logStreamId,omitempty"`

	// ResourceId IDs of resources (server, cron job, postgres, or redis) to filter by
	ResourceId *ResourceIdParam `form:"resourceId,omitempty" json:"resourceId,omitempty"`

	// Setting Filter log streams by their setting.
	Setting *externalRef6.LogStreamSettingFilter `form:"setting,omitempty" json:"setting,omitempty"`

	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// SubscribeLogsParams defines parameters for SubscribeLogs.
type SubscribeLogsParams struct {
	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId string `form:"ownerId" json:"ownerId"`

	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// Direction The direction to query logs for. Backward will return most recent logs first.
	// Forward will start with the oldest logs in the time range.
	Direction *externalRef6.LogDirectionParam `form:"direction,omitempty" json:"direction,omitempty"`

	// Resource Filter logs by their resource. A resource is the id of a server, cronjob, job, postgres, or redis.
	Resource externalRef6.LogFilterResource `form:"resource" json:"resource"`

	// Instance Filter logs by the instance they were emitted from. An instance is the id of a specific running server.
	Instance *externalRef6.LogFilterInstance `form:"instance,omitempty" json:"instance,omitempty"`

	// Host Filter request logs by their host. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported.
	Host *externalRef6.LogFilterHost `form:"host,omitempty" json:"host,omitempty"`

	// StatusCode Filter request logs by their status code. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported.
	StatusCode *externalRef6.LogFilterStatusCode `form:"statusCode,omitempty" json:"statusCode,omitempty"`

	// Method Filter request logs by their requests method. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported.
	Method *externalRef6.LogFilterMethod `form:"method,omitempty" json:"method,omitempty"`

	// Level Filter logs by their severity level. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported.
	Level *externalRef6.LogFilterLevel `form:"level,omitempty" json:"level,omitempty"`

	// Type Filter logs by their type. Types include `app` for application logs, `request` for request logs, and `build` for build logs. You can find the full set of types available for a query by using the `GET /logs/values` endpoint.
	Type *externalRef6.LogFilterType `form:"type,omitempty" json:"type,omitempty"`

	// Text Filter by the text of the logs. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported.
	Text *externalRef6.LogFilterText `form:"text,omitempty" json:"text,omitempty"`

	// Path Filter request logs by their path. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported.
	Path *externalRef6.LogFilterPath `form:"path,omitempty" json:"path,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListLogsValuesParams defines parameters for ListLogsValues.
type ListLogsValuesParams struct {
	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId string `form:"ownerId" json:"ownerId"`

	// Label The label to query logs for
	Label ListLogsValuesParamsLabel `form:"label" json:"label"`

	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// Direction The direction to query logs for. Backward will return most recent logs first.
	// Forward will start with the oldest logs in the time range.
	Direction *externalRef6.LogDirectionParam `form:"direction,omitempty" json:"direction,omitempty"`

	// Resource Filter logs by their resource. A resource is the id of a server, cronjob, job, postgres, or redis.
	Resource externalRef6.LogFilterResource `form:"resource" json:"resource"`

	// Instance Filter logs by the instance they were emitted from. An instance is the id of a specific running server.
	Instance *externalRef6.LogFilterInstance `form:"instance,omitempty" json:"instance,omitempty"`

	// Host Filter request logs by their host. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported.
	Host *externalRef6.LogFilterHost `form:"host,omitempty" json:"host,omitempty"`

	// StatusCode Filter request logs by their status code. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported.
	StatusCode *externalRef6.LogFilterStatusCode `form:"statusCode,omitempty" json:"statusCode,omitempty"`

	// Method Filter request logs by their requests method. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported.
	Method *externalRef6.LogFilterMethod `form:"method,omitempty" json:"method,omitempty"`

	// Level Filter logs by their severity level. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported.
	Level *externalRef6.LogFilterLevel `form:"level,omitempty" json:"level,omitempty"`

	// Type Filter logs by their type. Types include `app` for application logs, `request` for request logs, and `build` for build logs. You can find the full set of types available for a query by using the `GET /logs/values` endpoint.
	Type *externalRef6.LogFilterType `form:"type,omitempty" json:"type,omitempty"`

	// Text Filter by the text of the logs. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported.
	Text *externalRef6.LogFilterText `form:"text,omitempty" json:"text,omitempty"`

	// Path Filter request logs by their path. [Wildcards and regex](https://docs.render.com/logging#wildcards-and-regular-expressions) are supported.
	Path *externalRef6.LogFilterPath `form:"path,omitempty" json:"path,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListLogsValuesParamsLabel defines parameters for ListLogsValues.
type ListLogsValuesParamsLabel string

// ListMaintenanceParams defines parameters for ListMaintenance.
type ListMaintenanceParams struct {
	ResourceId *externalRef7.MaintenanceResourcesParam `form:"resourceId,omitempty" json:"resourceId,omitempty"`

	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam                       `form:"ownerId,omitempty" json:"ownerId,omitempty"`
	State   *externalRef7.MaintenanceStateParam `form:"state,omitempty" json:"state,omitempty"`
}

// GetActiveConnectionsParams defines parameters for GetActiveConnections.
type GetActiveConnectionsParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *externalRef8.ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Resource Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources Postgres ids or Redis ids
	Resource *externalRef8.DatastoreResourceQueryParam `form:"resource,omitempty" json:"resource,omitempty"`
}

// GetBandwidthParams defines parameters for GetBandwidth.
type GetBandwidthParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// Resource Service ID to query. When multiple service ids are provided, they are ORed together
	Resource *externalRef8.ServiceResourceQueryParam `form:"resource,omitempty" json:"resource,omitempty"`

	// Service This parameter is deprecated. Please use `resource` instead
	Service *externalRef8.ServiceQueryParam `form:"service,omitempty" json:"service,omitempty"`
}

// GetCpuParams defines parameters for GetCpu.
type GetCpuParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *externalRef8.ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Resource Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids
	Resource *externalRef8.ResourceQueryParam `form:"resource,omitempty" json:"resource,omitempty"`

	// Service This parameter is deprecated. Please use `resource` instead
	Service *externalRef8.ServiceQueryParam `form:"service,omitempty" json:"service,omitempty"`

	// Instance Instance ID to query. When multiple instance ID query params are provided, they are ORed together
	Instance *externalRef8.InstanceQueryParam `form:"instance,omitempty" json:"instance,omitempty"`

	// AggregationMethod The aggregation method to apply to multiple time series
	AggregationMethod *externalRef8.ApplicationMetricAggregationMethod `form:"aggregationMethod,omitempty" json:"aggregationMethod,omitempty"`
}

// GetCpuLimitParams defines parameters for GetCpuLimit.
type GetCpuLimitParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *externalRef8.ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Resource Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids
	Resource *externalRef8.ResourceQueryParam `form:"resource,omitempty" json:"resource,omitempty"`

	// Service This parameter is deprecated. Please use `resource` instead
	Service *externalRef8.ServiceQueryParam `form:"service,omitempty" json:"service,omitempty"`

	// Instance Instance ID to query. When multiple instance ID query params are provided, they are ORed together
	Instance *externalRef8.InstanceQueryParam `form:"instance,omitempty" json:"instance,omitempty"`
}

// GetCpuTargetParams defines parameters for GetCpuTarget.
type GetCpuTargetParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *externalRef8.ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Resource Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids
	Resource *externalRef8.ResourceQueryParam `form:"resource,omitempty" json:"resource,omitempty"`

	// Service This parameter is deprecated. Please use `resource` instead
	Service *externalRef8.ServiceQueryParam `form:"service,omitempty" json:"service,omitempty"`

	// Instance Instance ID to query. When multiple instance ID query params are provided, they are ORed together
	Instance *externalRef8.InstanceQueryParam `form:"instance,omitempty" json:"instance,omitempty"`
}

// GetDiskCapacityParams defines parameters for GetDiskCapacity.
type GetDiskCapacityParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *externalRef8.ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Resource Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids
	Resource *externalRef8.ResourceQueryParam `form:"resource,omitempty" json:"resource,omitempty"`

	// Service This parameter is deprecated. Please use `resource` instead
	Service *externalRef8.ServiceQueryParam `form:"service,omitempty" json:"service,omitempty"`
}

// GetDiskUsageParams defines parameters for GetDiskUsage.
type GetDiskUsageParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *externalRef8.ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Resource Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids
	Resource *externalRef8.ResourceQueryParam `form:"resource,omitempty" json:"resource,omitempty"`

	// Service This parameter is deprecated. Please use `resource` instead
	Service *externalRef8.ServiceQueryParam `form:"service,omitempty" json:"service,omitempty"`
}

// ListApplicationFilterValuesParams defines parameters for ListApplicationFilterValues.
type ListApplicationFilterValuesParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *externalRef8.ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Resource Service ID to query. When multiple service ids are provided, they are ORed together
	Resource *externalRef8.ServiceResourceQueryParam `form:"resource,omitempty" json:"resource,omitempty"`

	// Service This parameter is deprecated. Please use `resource` instead
	Service *externalRef8.ServiceQueryParam `form:"service,omitempty" json:"service,omitempty"`
}

// ListHttpFilterValuesParams defines parameters for ListHttpFilterValues.
type ListHttpFilterValuesParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *externalRef8.ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Resource Service ID to query. When multiple service ids are provided, they are ORed together
	Resource *externalRef8.ServiceResourceQueryParam `form:"resource,omitempty" json:"resource,omitempty"`

	// Service This parameter is deprecated. Please use `resource` instead
	Service *externalRef8.ServiceQueryParam `form:"service,omitempty" json:"service,omitempty"`

	// Host The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together
	Host *externalRef8.HostQueryParam `form:"host,omitempty" json:"host,omitempty"`

	// StatusCode The status codes of HTTP requests to filter to. When multiple status code query params are provided, they are ORed together
	StatusCode *externalRef8.HttpStatusCode `form:"statusCode,omitempty" json:"statusCode,omitempty"`
}

// ListPathFilterValuesParams defines parameters for ListPathFilterValues.
type ListPathFilterValuesParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *externalRef8.ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Resource Service ID to query. When multiple service ids are provided, they are ORed together
	Resource *externalRef8.ServiceResourceQueryParam `form:"resource,omitempty" json:"resource,omitempty"`

	// Service This parameter is deprecated. Please use `resource` instead
	Service *externalRef8.ServiceQueryParam `form:"service,omitempty" json:"service,omitempty"`

	// Host The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together
	Host *externalRef8.HostQueryParam `form:"host,omitempty" json:"host,omitempty"`

	// StatusCode The status codes of HTTP requests to filter to. When multiple status code query params are provided, they are ORed together
	StatusCode *externalRef8.HttpStatusCode `form:"statusCode,omitempty" json:"statusCode,omitempty"`

	// Path The paths of HTTP requests to filter to. When multiple path query params are provided, they are ORed together
	Path *externalRef8.PathQueryParam `form:"path,omitempty" json:"path,omitempty"`
}

// GetHttpLatencyParams defines parameters for GetHttpLatency.
type GetHttpLatencyParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *externalRef8.ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Resource Service ID to query. When multiple service ids are provided, they are ORed together
	Resource *externalRef8.ServiceResourceQueryParam `form:"resource,omitempty" json:"resource,omitempty"`

	// Service This parameter is deprecated. Please use `resource` instead
	Service *externalRef8.ServiceQueryParam `form:"service,omitempty" json:"service,omitempty"`

	// Host The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together
	Host *externalRef8.HostQueryParam `form:"host,omitempty" json:"host,omitempty"`

	// Path The paths of HTTP requests to filter to. When multiple path query params are provided, they are ORed together
	Path *externalRef8.PathQueryParam `form:"path,omitempty" json:"path,omitempty"`

	// Quantile The quantile of latencies to fetch. When multiple quantile query params are provided, they are ORed together
	Quantile *externalRef8.Quantile `form:"quantile,omitempty" json:"quantile,omitempty"`
}

// GetHttpRequestsParams defines parameters for GetHttpRequests.
type GetHttpRequestsParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *externalRef8.ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Resource Service ID to query. When multiple service ids are provided, they are ORed together
	Resource *externalRef8.ServiceResourceQueryParam `form:"resource,omitempty" json:"resource,omitempty"`

	// Service This parameter is deprecated. Please use `resource` instead
	Service *externalRef8.ServiceQueryParam `form:"service,omitempty" json:"service,omitempty"`

	// Host The hosts of HTTP requests to filter to. When multiple host query params are provided, they are ORed together
	Host *externalRef8.HostQueryParam `form:"host,omitempty" json:"host,omitempty"`

	// Path The paths of HTTP requests to filter to. When multiple path query params are provided, they are ORed together
	Path *externalRef8.PathQueryParam `form:"path,omitempty" json:"path,omitempty"`

	// AggregateBy The field to aggregate by
	AggregateBy *externalRef8.HttpAggregateBy `form:"aggregateBy,omitempty" json:"aggregateBy,omitempty"`
}

// GetInstanceCountParams defines parameters for GetInstanceCount.
type GetInstanceCountParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *externalRef8.ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Resource Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids
	Resource *externalRef8.ResourceQueryParam `form:"resource,omitempty" json:"resource,omitempty"`

	// Service This parameter is deprecated. Please use `resource` instead
	Service *externalRef8.ServiceQueryParam `form:"service,omitempty" json:"service,omitempty"`
}

// GetMemoryParams defines parameters for GetMemory.
type GetMemoryParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *externalRef8.ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Resource Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids
	Resource *externalRef8.ResourceQueryParam `form:"resource,omitempty" json:"resource,omitempty"`

	// Service This parameter is deprecated. Please use `resource` instead
	Service *externalRef8.ServiceQueryParam `form:"service,omitempty" json:"service,omitempty"`

	// Instance Instance ID to query. When multiple instance ID query params are provided, they are ORed together
	Instance *externalRef8.InstanceQueryParam `form:"instance,omitempty" json:"instance,omitempty"`
}

// GetMemoryLimitParams defines parameters for GetMemoryLimit.
type GetMemoryLimitParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *externalRef8.ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Resource Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids
	Resource *externalRef8.ResourceQueryParam `form:"resource,omitempty" json:"resource,omitempty"`

	// Service This parameter is deprecated. Please use `resource` instead
	Service *externalRef8.ServiceQueryParam `form:"service,omitempty" json:"service,omitempty"`

	// Instance Instance ID to query. When multiple instance ID query params are provided, they are ORed together
	Instance *externalRef8.InstanceQueryParam `form:"instance,omitempty" json:"instance,omitempty"`
}

// GetMemoryTargetParams defines parameters for GetMemoryTarget.
type GetMemoryTargetParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *externalRef8.ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Resource Resource ID to query. When multiple resource query params are provided, they are ORed together. Resources can be service ids, Postgres ids, or Redis ids
	Resource *externalRef8.ResourceQueryParam `form:"resource,omitempty" json:"resource,omitempty"`

	// Service This parameter is deprecated. Please use `resource` instead
	Service *externalRef8.ServiceQueryParam `form:"service,omitempty" json:"service,omitempty"`

	// Instance Instance ID to query. When multiple instance ID query params are provided, they are ORed together
	Instance *externalRef8.InstanceQueryParam `form:"instance,omitempty" json:"instance,omitempty"`
}

// GetReplicationLagParams defines parameters for GetReplicationLag.
type GetReplicationLagParams struct {
	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// ResolutionSeconds The resolution of the returned data
	ResolutionSeconds *externalRef8.ResolutionParam `form:"resolutionSeconds,omitempty" json:"resolutionSeconds,omitempty"`

	// Resource Postgres ID to query. When multiple resource query params are provided, they are ORed together
	Resource *externalRef8.PostgresResourceQueryParam `form:"resource,omitempty" json:"resource,omitempty"`
}

// ListNotificationOverridesParams defines parameters for ListNotificationOverrides.
type ListNotificationOverridesParams struct {
	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// ServiceId Filter for resources by service ID
	ServiceId *ServiceIdsParam `form:"serviceId,omitempty" json:"serviceId,omitempty"`

	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListOwnersParams defines parameters for ListOwners.
type ListOwnersParams struct {
	Name  *[]string `form:"name,omitempty" json:"name,omitempty"`
	Email *[]string `form:"email,omitempty" json:"email,omitempty"`

	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListPostgresParams defines parameters for ListPostgres.
type ListPostgresParams struct {
	// Name Filter by name
	Name *NameParam `form:"name,omitempty" json:"name,omitempty"`

	// Region Filter by resource region
	Region *RegionParam `form:"region,omitempty" json:"region,omitempty"`

	// Suspended Filter resources based on whether they're suspended or not suspended
	Suspended *SuspendedParam `form:"suspended,omitempty" json:"suspended,omitempty"`

	// CreatedBefore Filter for resources created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *CreatedBeforeParam `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for resources created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *CreatedAfterParam `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// UpdatedBefore Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)
	UpdatedBefore *UpdatedBeforeParam `form:"updatedBefore,omitempty" json:"updatedBefore,omitempty"`

	// UpdatedAfter Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)
	UpdatedAfter *UpdatedAfterParam `form:"updatedAfter,omitempty" json:"updatedAfter,omitempty"`

	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// EnvironmentId Filter for resources that belong to an environment
	EnvironmentId *EnvironmentIdParam `form:"environmentId,omitempty" json:"environmentId,omitempty"`

	// IncludeReplicas Include replicas in the response
	IncludeReplicas *IncludeReplicasParam `form:"includeReplicas,omitempty" json:"includeReplicas,omitempty"`

	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListPostgresParamsSuspended defines parameters for ListPostgres.
type ListPostgresParamsSuspended string

// ListProjectsParams defines parameters for ListProjects.
type ListProjectsParams struct {
	// Name Filter by name
	Name *NameParam `form:"name,omitempty" json:"name,omitempty"`

	// CreatedBefore Filter for resources created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *CreatedBeforeParam `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for resources created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *CreatedAfterParam `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// UpdatedBefore Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)
	UpdatedBefore *UpdatedBeforeParam `form:"updatedBefore,omitempty" json:"updatedBefore,omitempty"`

	// UpdatedAfter Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)
	UpdatedAfter *UpdatedAfterParam `form:"updatedAfter,omitempty" json:"updatedAfter,omitempty"`

	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListRedisParams defines parameters for ListRedis.
type ListRedisParams struct {
	// Name Filter by name
	Name *NameParam `form:"name,omitempty" json:"name,omitempty"`

	// Region Filter by resource region
	Region *RegionParam `form:"region,omitempty" json:"region,omitempty"`

	// CreatedBefore Filter for resources created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *CreatedBeforeParam `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for resources created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *CreatedAfterParam `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// UpdatedBefore Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)
	UpdatedBefore *UpdatedBeforeParam `form:"updatedBefore,omitempty" json:"updatedBefore,omitempty"`

	// UpdatedAfter Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)
	UpdatedAfter *UpdatedAfterParam `form:"updatedAfter,omitempty" json:"updatedAfter,omitempty"`

	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// EnvironmentId Filter for resources that belong to an environment
	EnvironmentId *EnvironmentIdParam `form:"environmentId,omitempty" json:"environmentId,omitempty"`

	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListRegistryCredentialsParams defines parameters for ListRegistryCredentials.
type ListRegistryCredentialsParams struct {
	// Name Filter for the name of a credential
	Name *[]string `form:"name,omitempty" json:"name,omitempty"`

	// Username Filter for the username of a credential
	Username *[]string `form:"username,omitempty" json:"username,omitempty"`

	// Type Filter for the registry type for the credential
	Type *[]RegistryCredentialRegistry `form:"type,omitempty" json:"type,omitempty"`

	// CreatedBefore Filter for services created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *time.Time `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for services created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *time.Time `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// UpdatedBefore Filter for services updated before a certain time (specified as an ISO 8601 timestamp)
	UpdatedBefore *time.Time `form:"updatedBefore,omitempty" json:"updatedBefore,omitempty"`

	// UpdatedAfter Filter for services updated after a certain time (specified as an ISO 8601 timestamp)
	UpdatedAfter *time.Time `form:"updatedAfter,omitempty" json:"updatedAfter,omitempty"`

	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateRegistryCredentialJSONBody defines parameters for CreateRegistryCredential.
type CreateRegistryCredentialJSONBody struct {
	AuthToken string `json:"authToken"`
	Name      string `json:"name"`
	OwnerId   string `json:"ownerId"`

	// Registry The registry to use this credential with
	Registry RegistryCredentialRegistry `json:"registry"`
	Username string                     `json:"username"`
}

// UpdateRegistryCredentialJSONBody defines parameters for UpdateRegistryCredential.
type UpdateRegistryCredentialJSONBody struct {
	AuthToken string `json:"authToken"`
	Name      string `json:"name"`

	// Registry The registry to use this credential with
	Registry RegistryCredentialRegistry `json:"registry"`
	Username string                     `json:"username"`
}

// ListServiceLinksParams defines parameters for ListServiceLinks.
type ListServiceLinksParams struct {
	// LinkSourceId Filter for resources that are the source of a service link
	LinkSourceId *LinkSourceParam `form:"linkSourceId,omitempty" json:"linkSourceId,omitempty"`

	// LinkDestinationId Filter for resources that are the destination of a service link
	LinkDestinationId *LinkDestinationParam `form:"linkDestinationId,omitempty" json:"linkDestinationId,omitempty"`

	// CreatedBefore Filter for resources created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *CreatedBeforeParam `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for resources created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *CreatedAfterParam `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// UpdatedBefore Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)
	UpdatedBefore *UpdatedBeforeParam `form:"updatedBefore,omitempty" json:"updatedBefore,omitempty"`

	// UpdatedAfter Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)
	UpdatedAfter *UpdatedAfterParam `form:"updatedAfter,omitempty" json:"updatedAfter,omitempty"`

	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListServicesParams defines parameters for ListServices.
type ListServicesParams struct {
	// Name Filter by name
	Name *NameParam `form:"name,omitempty" json:"name,omitempty"`

	// Type Filter for types of services
	Type *ServiceTypeParam `form:"type,omitempty" json:"type,omitempty"`

	// EnvironmentId Filter for resources that belong to an environment
	EnvironmentId *EnvironmentIdParam `form:"environmentId,omitempty" json:"environmentId,omitempty"`

	// Env Filter for environments (runtimes) of services (deprecated; use `runtime` instead)
	Env *EnvParam `form:"env,omitempty" json:"env,omitempty"`

	// Region Filter by resource region
	Region *RegionParam `form:"region,omitempty" json:"region,omitempty"`

	// Suspended Filter resources based on whether they're suspended or not suspended
	Suspended *SuspendedParam `form:"suspended,omitempty" json:"suspended,omitempty"`

	// CreatedBefore Filter for resources created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *CreatedBeforeParam `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for resources created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *CreatedAfterParam `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// UpdatedBefore Filter for resources updated before a certain time (specified as an ISO 8601 timestamp)
	UpdatedBefore *UpdatedBeforeParam `form:"updatedBefore,omitempty" json:"updatedBefore,omitempty"`

	// UpdatedAfter Filter for resources updated after a certain time (specified as an ISO 8601 timestamp)
	UpdatedAfter *UpdatedAfterParam `form:"updatedAfter,omitempty" json:"updatedAfter,omitempty"`

	// OwnerId The ID of the owner (team or personal user) whose resources should be returned
	OwnerId *OwnerIdParam `form:"ownerId,omitempty" json:"ownerId,omitempty"`

	// IncludePreviews Include previews in the response
	IncludePreviews *IncludePreviewsParam `form:"includePreviews,omitempty" json:"includePreviews,omitempty"`

	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListServicesParamsSuspended defines parameters for ListServices.
type ListServicesParamsSuspended string

// ListCustomDomainsParams defines parameters for ListCustomDomains.
type ListCustomDomainsParams struct {
	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`

	// Name Filter for the names of custom domain
	Name *[]string `form:"name,omitempty" json:"name,omitempty"`

	// DomainType Filter for domain type
	DomainType *ListCustomDomainsParamsDomainType `form:"domainType,omitempty" json:"domainType,omitempty"`

	// VerificationStatus Filter for domain verification status (`verified` or `unverified`)
	VerificationStatus *ListCustomDomainsParamsVerificationStatus `form:"verificationStatus,omitempty" json:"verificationStatus,omitempty"`

	// CreatedBefore Filter for custom domains created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *time.Time `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for custom domains created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *time.Time `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`
}

// ListCustomDomainsParamsDomainType defines parameters for ListCustomDomains.
type ListCustomDomainsParamsDomainType string

// ListCustomDomainsParamsVerificationStatus defines parameters for ListCustomDomains.
type ListCustomDomainsParamsVerificationStatus string

// CreateCustomDomainJSONBody defines parameters for CreateCustomDomain.
type CreateCustomDomainJSONBody struct {
	Name string `json:"name"`
}

// ListDeploysParams defines parameters for ListDeploys.
type ListDeploysParams struct {
	// Status Filter for deploys with the specified statuses
	Status *[]DeployStatus `form:"status,omitempty" json:"status,omitempty"`

	// CreatedBefore Filter for deploys created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *time.Time `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for deploys created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *time.Time `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// UpdatedBefore Filter for deploys updated before a certain time (specified as an ISO 8601 timestamp)
	UpdatedBefore *time.Time `form:"updatedBefore,omitempty" json:"updatedBefore,omitempty"`

	// UpdatedAfter Filter for deploys updated after a certain time (specified as an ISO 8601 timestamp)
	UpdatedAfter *time.Time `form:"updatedAfter,omitempty" json:"updatedAfter,omitempty"`

	// FinishedBefore Filter for deploys finished before a certain time (specified as an ISO 8601 timestamp)
	FinishedBefore *time.Time `form:"finishedBefore,omitempty" json:"finishedBefore,omitempty"`

	// FinishedAfter Filter for deploys finished after a certain time (specified as an ISO 8601 timestamp)
	FinishedAfter *time.Time `form:"finishedAfter,omitempty" json:"finishedAfter,omitempty"`

	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// CreateDeployJSONBody defines parameters for CreateDeploy.
type CreateDeployJSONBody struct {
	// ClearCache If `clear`, Render clears the service's build cache before deploying. This can be useful if you're experiencing issues with your build.
	ClearCache *CreateDeployJSONBodyClearCache `json:"clearCache,omitempty"`

	// CommitId The SHA of a specific Git commit to deploy for a service. Defaults to the latest commit on the service's connected branch.
	//
	// Note that deploying a specific commit with this endpoint does not disable autodeploys for the service.
	//
	// You can toggle autodeploys for your service with the [Update service](https://api-docs.render.com/reference/update-service) endpoint or in the Render Dashboard.
	//
	// Not supported for cron jobs.
	CommitId *string `json:"commitId,omitempty"`

	// ImageUrl The URL of the image to deploy for an image-backed service.
	//
	// The host, repository, and image name all must match the currently configured image for the service.
	ImageUrl *string `json:"imageUrl,omitempty"`
}

// CreateDeployJSONBodyClearCache defines parameters for CreateDeploy.
type CreateDeployJSONBodyClearCache string

// GetEnvVarsForServiceParams defines parameters for GetEnvVarsForService.
type GetEnvVarsForServiceParams struct {
	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListEventsParams defines parameters for ListEvents.
type ListEventsParams struct {
	// EventType The type of event to filter to
	EventType *EventTypeParam `form:"eventType,omitempty" json:"eventType,omitempty"`

	// StartTime Epoch/Unix timestamp of end of time range to return. Defaults to `now() - 1 hour`.
	StartTime *StartTimeParam `form:"startTime,omitempty" json:"startTime,omitempty"`

	// EndTime Epoch/Unix timestamp of end of time range to return. Defaults to `now()`.
	EndTime *EndTimeParam `form:"endTime,omitempty" json:"endTime,omitempty"`

	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListHeadersParams defines parameters for ListHeaders.
type ListHeadersParams struct {
	// Path Filter for specific paths that headers apply to
	Path *[]string `form:"path,omitempty" json:"path,omitempty"`

	// Name Filter for header names
	Name *[]string `form:"name,omitempty" json:"name,omitempty"`

	// Value Filter for header values
	Value *[]string `form:"value,omitempty" json:"value,omitempty"`

	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// UpdateHeadersJSONBody defines parameters for UpdateHeaders.
type UpdateHeadersJSONBody = []HeaderInput

// ListJobParams defines parameters for ListJob.
type ListJobParams struct {
	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`

	// Status Filter for the status of the job (`pending`, `running`, `succeeded`, or `failed`)
	Status *[]ListJobParamsStatus `form:"status,omitempty" json:"status,omitempty"`

	// CreatedBefore Filter for jobs created before a certain time (specified as an ISO 8601 timestamp)
	CreatedBefore *time.Time `form:"createdBefore,omitempty" json:"createdBefore,omitempty"`

	// CreatedAfter Filter for jobs created after a certain time (specified as an ISO 8601 timestamp)
	CreatedAfter *time.Time `form:"createdAfter,omitempty" json:"createdAfter,omitempty"`

	// StartedBefore Filter for jobs started before a certain time (specified as an ISO 8601 timestamp)
	StartedBefore *time.Time `form:"startedBefore,omitempty" json:"startedBefore,omitempty"`

	// StartedAfter Filter for jobs started after a certain time (specified as an ISO 8601 timestamp)
	StartedAfter *time.Time `form:"startedAfter,omitempty" json:"startedAfter,omitempty"`

	// FinishedBefore Filter for jobs finished before a certain time (specified as an ISO 8601 timestamp)
	FinishedBefore *time.Time `form:"finishedBefore,omitempty" json:"finishedBefore,omitempty"`

	// FinishedAfter Filter for jobs finished after a certain time (specified as an ISO 8601 timestamp)
	FinishedAfter *time.Time `form:"finishedAfter,omitempty" json:"finishedAfter,omitempty"`
}

// ListJobParamsStatus defines parameters for ListJob.
type ListJobParamsStatus string

// PostJobJSONBody defines parameters for PostJob.
type PostJobJSONBody struct {
	PlanId       *string `json:"planId,omitempty"`
	StartCommand string  `json:"startCommand"`
}

// RollbackDeployJSONBody defines parameters for RollbackDeploy.
type RollbackDeployJSONBody struct {
	// DeployId The ID of the deploy to roll back to
	DeployId string `json:"deployId"`
}

// ListRoutesParams defines parameters for ListRoutes.
type ListRoutesParams struct {
	// Type Filter for the type of route rule
	Type *[]ListRoutesParamsType `form:"type,omitempty" json:"type,omitempty"`

	// Source Filter for the source path of the route
	Source *[]string `form:"source,omitempty" json:"source,omitempty"`

	// Destination Filter for the destination path of the route
	Destination *[]string `form:"destination,omitempty" json:"destination,omitempty"`

	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// ListRoutesParamsType defines parameters for ListRoutes.
type ListRoutesParamsType string

// PutRoutesJSONBody defines parameters for PutRoutes.
type PutRoutesJSONBody = []RoutePut

// ScaleServiceJSONBody defines parameters for ScaleService.
type ScaleServiceJSONBody struct {
	NumInstances int `json:"numInstances"`
}

// ListSecretFilesForServiceParams defines parameters for ListSecretFilesForService.
type ListSecretFilesForServiceParams struct {
	// Cursor The position in the result list to start from when fetching paginated results. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Cursor *CursorParam `form:"cursor,omitempty" json:"cursor,omitempty"`

	// Limit The maximum number of items to return. For details, see [Pagination](https://api-docs.render.com/reference/pagination).
	Limit *LimitParam `form:"limit,omitempty" json:"limit,omitempty"`
}

// UpdateSecretFilesForServiceJSONBody defines parameters for UpdateSecretFilesForService.
type UpdateSecretFilesForServiceJSONBody = []SecretFileInput

// AddOrUpdateSecretFileJSONBody defines parameters for AddOrUpdateSecretFile.
type AddOrUpdateSecretFileJSONBody struct {
	Content *string `json:"content,omitempty"`
}

// UpdateBlueprintJSONRequestBody defines body for UpdateBlueprint for application/json ContentType.
type UpdateBlueprintJSONRequestBody = externalRef1.BlueprintPATCH

// AddDiskJSONRequestBody defines body for AddDisk for application/json ContentType.
type AddDiskJSONRequestBody = externalRef2.DiskPOST

// UpdateDiskJSONRequestBody defines body for UpdateDisk for application/json ContentType.
type UpdateDiskJSONRequestBody = externalRef2.DiskPATCH

// RestoreSnapshotJSONRequestBody defines body for RestoreSnapshot for application/json ContentType.
type RestoreSnapshotJSONRequestBody = SnapshotRestorePOST

// CreateEnvGroupJSONRequestBody defines body for CreateEnvGroup for application/json ContentType.
type CreateEnvGroupJSONRequestBody = EnvGroupPOSTInput

// UpdateEnvGroupJSONRequestBody defines body for UpdateEnvGroup for application/json ContentType.
type UpdateEnvGroupJSONRequestBody = EnvGroupPATCHInput

// UpdateEnvGroupEnvVarJSONRequestBody defines body for UpdateEnvGroupEnvVar for application/json ContentType.
type UpdateEnvGroupEnvVarJSONRequestBody = AddUpdateEnvVarInput

// UpdateEnvGroupSecretFileJSONRequestBody defines body for UpdateEnvGroupSecretFile for application/json ContentType.
type UpdateEnvGroupSecretFileJSONRequestBody UpdateEnvGroupSecretFileJSONBody

// CreateEnvironmentJSONRequestBody defines body for CreateEnvironment for application/json ContentType.
type CreateEnvironmentJSONRequestBody = EnvironmentPOSTInput

// UpdateEnvironmentJSONRequestBody defines body for UpdateEnvironment for application/json ContentType.
type UpdateEnvironmentJSONRequestBody = EnvironmentPATCHInput

// AddResourcesToEnvironmentJSONRequestBody defines body for AddResourcesToEnvironment for application/json ContentType.
type AddResourcesToEnvironmentJSONRequestBody = EnvironmentResourcesPOSTInput

// CreateKeyValueJSONRequestBody defines body for CreateKeyValue for application/json ContentType.
type CreateKeyValueJSONRequestBody = KeyValuePOSTInput

// UpdateKeyValueJSONRequestBody defines body for UpdateKeyValue for application/json ContentType.
type UpdateKeyValueJSONRequestBody = KeyValuePATCHInput

// UpdateOwnerLogStreamJSONRequestBody defines body for UpdateOwnerLogStream for application/json ContentType.
type UpdateOwnerLogStreamJSONRequestBody = externalRef6.LogStreamOwnerUpdate

// UpdateResourceLogStreamJSONRequestBody defines body for UpdateResourceLogStream for application/json ContentType.
type UpdateResourceLogStreamJSONRequestBody = externalRef6.LogStreamResourceUpdate

// UpdateMaintenanceJSONRequestBody defines body for UpdateMaintenance for application/json ContentType.
type UpdateMaintenanceJSONRequestBody = externalRef7.MaintenanceRunPATCH

// PatchServiceNotificationOverridesJSONRequestBody defines body for PatchServiceNotificationOverrides for application/json ContentType.
type PatchServiceNotificationOverridesJSONRequestBody = externalRef9.NotificationServiceOverridePATCH

// PatchOwnerNotificationSettingsJSONRequestBody defines body for PatchOwnerNotificationSettings for application/json ContentType.
type PatchOwnerNotificationSettingsJSONRequestBody = externalRef9.NotificationSettingPATCH

// CreatePostgresJSONRequestBody defines body for CreatePostgres for application/json ContentType.
type CreatePostgresJSONRequestBody = PostgresPOSTInput

// UpdatePostgresJSONRequestBody defines body for UpdatePostgres for application/json ContentType.
type UpdatePostgresJSONRequestBody = PostgresPATCHInput

// RecoverPostgresJSONRequestBody defines body for RecoverPostgres for application/json ContentType.
type RecoverPostgresJSONRequestBody = externalRef10.RecoveryInput

// CreateProjectJSONRequestBody defines body for CreateProject for application/json ContentType.
type CreateProjectJSONRequestBody = ProjectPOSTInput

// UpdateProjectJSONRequestBody defines body for UpdateProject for application/json ContentType.
type UpdateProjectJSONRequestBody = ProjectPATCHInput

// CreateRedisJSONRequestBody defines body for CreateRedis for application/json ContentType.
type CreateRedisJSONRequestBody = RedisPOSTInput

// UpdateRedisJSONRequestBody defines body for UpdateRedis for application/json ContentType.
type UpdateRedisJSONRequestBody = RedisPATCHInput

// CreateRegistryCredentialJSONRequestBody defines body for CreateRegistryCredential for application/json ContentType.
type CreateRegistryCredentialJSONRequestBody CreateRegistryCredentialJSONBody

// UpdateRegistryCredentialJSONRequestBody defines body for UpdateRegistryCredential for application/json ContentType.
type UpdateRegistryCredentialJSONRequestBody UpdateRegistryCredentialJSONBody

// CreateServiceLinkJSONRequestBody defines body for CreateServiceLink for application/json ContentType.
type CreateServiceLinkJSONRequestBody = ServiceLinkPOSTInput

// UpdateServiceLinkJSONRequestBody defines body for UpdateServiceLink for application/json ContentType.
type UpdateServiceLinkJSONRequestBody = ServiceLinkPATCHInput

// CreateServiceJSONRequestBody defines body for CreateService for application/json ContentType.
type CreateServiceJSONRequestBody = ServicePOST

// UpdateServiceJSONRequestBody defines body for UpdateService for application/json ContentType.
type UpdateServiceJSONRequestBody = ServicePATCH

// AutoscaleServiceJSONRequestBody defines body for AutoscaleService for application/json ContentType.
type AutoscaleServiceJSONRequestBody = externalRef0.AutoscalingConfig

// CreateCustomDomainJSONRequestBody defines body for CreateCustomDomain for application/json ContentType.
type CreateCustomDomainJSONRequestBody CreateCustomDomainJSONBody

// CreateDeployJSONRequestBody defines body for CreateDeploy for application/json ContentType.
type CreateDeployJSONRequestBody CreateDeployJSONBody

// UpdateEnvVarsForServiceJSONRequestBody defines body for UpdateEnvVarsForService for application/json ContentType.
type UpdateEnvVarsForServiceJSONRequestBody = EnvVarInputArray

// UpdateEnvVarJSONRequestBody defines body for UpdateEnvVar for application/json ContentType.
type UpdateEnvVarJSONRequestBody = AddUpdateEnvVarInput

// AddHeadersJSONRequestBody defines body for AddHeaders for application/json ContentType.
type AddHeadersJSONRequestBody = HeaderInput

// UpdateHeadersJSONRequestBody defines body for UpdateHeaders for application/json ContentType.
type UpdateHeadersJSONRequestBody = UpdateHeadersJSONBody

// PostJobJSONRequestBody defines body for PostJob for application/json ContentType.
type PostJobJSONRequestBody PostJobJSONBody

// PreviewServiceJSONRequestBody defines body for PreviewService for application/json ContentType.
type PreviewServiceJSONRequestBody = PreviewInput

// RollbackDeployJSONRequestBody defines body for RollbackDeploy for application/json ContentType.
type RollbackDeployJSONRequestBody RollbackDeployJSONBody

// PatchRouteJSONRequestBody defines body for PatchRoute for application/json ContentType.
type PatchRouteJSONRequestBody = RoutePatch

// AddRouteJSONRequestBody defines body for AddRoute for application/json ContentType.
type AddRouteJSONRequestBody = RoutePost

// PutRoutesJSONRequestBody defines body for PutRoutes for application/json ContentType.
type PutRoutesJSONRequestBody = PutRoutesJSONBody

// ScaleServiceJSONRequestBody defines body for ScaleService for application/json ContentType.
type ScaleServiceJSONRequestBody ScaleServiceJSONBody

// UpdateSecretFilesForServiceJSONRequestBody defines body for UpdateSecretFilesForService for application/json ContentType.
type UpdateSecretFilesForServiceJSONRequestBody = UpdateSecretFilesForServiceJSONBody

// AddOrUpdateSecretFileJSONRequestBody defines body for AddOrUpdateSecretFile for application/json ContentType.
type AddOrUpdateSecretFileJSONRequestBody AddOrUpdateSecretFileJSONBody

// AsEnvVarValue returns the union data inside the AddUpdateEnvVarInput as a EnvVarValue
func (t AddUpdateEnvVarInput) AsEnvVarValue() (EnvVarValue, error) {
	var body EnvVarValue
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEnvVarValue overwrites any union data inside the AddUpdateEnvVarInput as the provided EnvVarValue
func (t *AddUpdateEnvVarInput) FromEnvVarValue(v EnvVarValue) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEnvVarValue performs a merge with any union data inside the AddUpdateEnvVarInput, using the provided EnvVarValue
func (t *AddUpdateEnvVarInput) MergeEnvVarValue(v EnvVarValue) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEnvVarGenerateValue returns the union data inside the AddUpdateEnvVarInput as a EnvVarGenerateValue
func (t AddUpdateEnvVarInput) AsEnvVarGenerateValue() (EnvVarGenerateValue, error) {
	var body EnvVarGenerateValue
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEnvVarGenerateValue overwrites any union data inside the AddUpdateEnvVarInput as the provided EnvVarGenerateValue
func (t *AddUpdateEnvVarInput) FromEnvVarGenerateValue(v EnvVarGenerateValue) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEnvVarGenerateValue performs a merge with any union data inside the AddUpdateEnvVarInput, using the provided EnvVarGenerateValue
func (t *AddUpdateEnvVarInput) MergeEnvVarGenerateValue(v EnvVarGenerateValue) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t AddUpdateEnvVarInput) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *AddUpdateEnvVarInput) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsDockerDetails returns the union data inside the EnvSpecificDetails as a DockerDetails
func (t EnvSpecificDetails) AsDockerDetails() (DockerDetails, error) {
	var body DockerDetails
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDockerDetails overwrites any union data inside the EnvSpecificDetails as the provided DockerDetails
func (t *EnvSpecificDetails) FromDockerDetails(v DockerDetails) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDockerDetails performs a merge with any union data inside the EnvSpecificDetails, using the provided DockerDetails
func (t *EnvSpecificDetails) MergeDockerDetails(v DockerDetails) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsNativeEnvironmentDetails returns the union data inside the EnvSpecificDetails as a NativeEnvironmentDetails
func (t EnvSpecificDetails) AsNativeEnvironmentDetails() (NativeEnvironmentDetails, error) {
	var body NativeEnvironmentDetails
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromNativeEnvironmentDetails overwrites any union data inside the EnvSpecificDetails as the provided NativeEnvironmentDetails
func (t *EnvSpecificDetails) FromNativeEnvironmentDetails(v NativeEnvironmentDetails) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeNativeEnvironmentDetails performs a merge with any union data inside the EnvSpecificDetails, using the provided NativeEnvironmentDetails
func (t *EnvSpecificDetails) MergeNativeEnvironmentDetails(v NativeEnvironmentDetails) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t EnvSpecificDetails) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *EnvSpecificDetails) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsDockerDetailsPATCH returns the union data inside the EnvSpecificDetailsPATCH as a DockerDetailsPATCH
func (t EnvSpecificDetailsPATCH) AsDockerDetailsPATCH() (DockerDetailsPATCH, error) {
	var body DockerDetailsPATCH
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDockerDetailsPATCH overwrites any union data inside the EnvSpecificDetailsPATCH as the provided DockerDetailsPATCH
func (t *EnvSpecificDetailsPATCH) FromDockerDetailsPATCH(v DockerDetailsPATCH) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDockerDetailsPATCH performs a merge with any union data inside the EnvSpecificDetailsPATCH, using the provided DockerDetailsPATCH
func (t *EnvSpecificDetailsPATCH) MergeDockerDetailsPATCH(v DockerDetailsPATCH) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsNativeEnvironmentDetailsPATCH returns the union data inside the EnvSpecificDetailsPATCH as a NativeEnvironmentDetailsPATCH
func (t EnvSpecificDetailsPATCH) AsNativeEnvironmentDetailsPATCH() (NativeEnvironmentDetailsPATCH, error) {
	var body NativeEnvironmentDetailsPATCH
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromNativeEnvironmentDetailsPATCH overwrites any union data inside the EnvSpecificDetailsPATCH as the provided NativeEnvironmentDetailsPATCH
func (t *EnvSpecificDetailsPATCH) FromNativeEnvironmentDetailsPATCH(v NativeEnvironmentDetailsPATCH) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeNativeEnvironmentDetailsPATCH performs a merge with any union data inside the EnvSpecificDetailsPATCH, using the provided NativeEnvironmentDetailsPATCH
func (t *EnvSpecificDetailsPATCH) MergeNativeEnvironmentDetailsPATCH(v NativeEnvironmentDetailsPATCH) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t EnvSpecificDetailsPATCH) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *EnvSpecificDetailsPATCH) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsDockerDetailsPOST returns the union data inside the EnvSpecificDetailsPOST as a DockerDetailsPOST
func (t EnvSpecificDetailsPOST) AsDockerDetailsPOST() (DockerDetailsPOST, error) {
	var body DockerDetailsPOST
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromDockerDetailsPOST overwrites any union data inside the EnvSpecificDetailsPOST as the provided DockerDetailsPOST
func (t *EnvSpecificDetailsPOST) FromDockerDetailsPOST(v DockerDetailsPOST) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeDockerDetailsPOST performs a merge with any union data inside the EnvSpecificDetailsPOST, using the provided DockerDetailsPOST
func (t *EnvSpecificDetailsPOST) MergeDockerDetailsPOST(v DockerDetailsPOST) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsNativeEnvironmentDetailsPOST returns the union data inside the EnvSpecificDetailsPOST as a NativeEnvironmentDetailsPOST
func (t EnvSpecificDetailsPOST) AsNativeEnvironmentDetailsPOST() (NativeEnvironmentDetailsPOST, error) {
	var body NativeEnvironmentDetailsPOST
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromNativeEnvironmentDetailsPOST overwrites any union data inside the EnvSpecificDetailsPOST as the provided NativeEnvironmentDetailsPOST
func (t *EnvSpecificDetailsPOST) FromNativeEnvironmentDetailsPOST(v NativeEnvironmentDetailsPOST) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeNativeEnvironmentDetailsPOST performs a merge with any union data inside the EnvSpecificDetailsPOST, using the provided NativeEnvironmentDetailsPOST
func (t *EnvSpecificDetailsPOST) MergeNativeEnvironmentDetailsPOST(v NativeEnvironmentDetailsPOST) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t EnvSpecificDetailsPOST) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *EnvSpecificDetailsPOST) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsEnvVarKeyValue returns the union data inside the EnvVarInput as a EnvVarKeyValue
func (t EnvVarInput) AsEnvVarKeyValue() (EnvVarKeyValue, error) {
	var body EnvVarKeyValue
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEnvVarKeyValue overwrites any union data inside the EnvVarInput as the provided EnvVarKeyValue
func (t *EnvVarInput) FromEnvVarKeyValue(v EnvVarKeyValue) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEnvVarKeyValue performs a merge with any union data inside the EnvVarInput, using the provided EnvVarKeyValue
func (t *EnvVarInput) MergeEnvVarKeyValue(v EnvVarKeyValue) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsEnvVarKeyGenerateValue returns the union data inside the EnvVarInput as a EnvVarKeyGenerateValue
func (t EnvVarInput) AsEnvVarKeyGenerateValue() (EnvVarKeyGenerateValue, error) {
	var body EnvVarKeyGenerateValue
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromEnvVarKeyGenerateValue overwrites any union data inside the EnvVarInput as the provided EnvVarKeyGenerateValue
func (t *EnvVarInput) FromEnvVarKeyGenerateValue(v EnvVarKeyGenerateValue) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeEnvVarKeyGenerateValue performs a merge with any union data inside the EnvVarInput, using the provided EnvVarKeyGenerateValue
func (t *EnvVarInput) MergeEnvVarKeyGenerateValue(v EnvVarKeyGenerateValue) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t EnvVarInput) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *EnvVarInput) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsStaticSiteDetails returns the union data inside the Service_ServiceDetails as a StaticSiteDetails
func (t Service_ServiceDetails) AsStaticSiteDetails() (StaticSiteDetails, error) {
	var body StaticSiteDetails
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromStaticSiteDetails overwrites any union data inside the Service_ServiceDetails as the provided StaticSiteDetails
func (t *Service_ServiceDetails) FromStaticSiteDetails(v StaticSiteDetails) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeStaticSiteDetails performs a merge with any union data inside the Service_ServiceDetails, using the provided StaticSiteDetails
func (t *Service_ServiceDetails) MergeStaticSiteDetails(v StaticSiteDetails) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsWebServiceDetails returns the union data inside the Service_ServiceDetails as a WebServiceDetails
func (t Service_ServiceDetails) AsWebServiceDetails() (WebServiceDetails, error) {
	var body WebServiceDetails
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromWebServiceDetails overwrites any union data inside the Service_ServiceDetails as the provided WebServiceDetails
func (t *Service_ServiceDetails) FromWebServiceDetails(v WebServiceDetails) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeWebServiceDetails performs a merge with any union data inside the Service_ServiceDetails, using the provided WebServiceDetails
func (t *Service_ServiceDetails) MergeWebServiceDetails(v WebServiceDetails) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPrivateServiceDetails returns the union data inside the Service_ServiceDetails as a PrivateServiceDetails
func (t Service_ServiceDetails) AsPrivateServiceDetails() (PrivateServiceDetails, error) {
	var body PrivateServiceDetails
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPrivateServiceDetails overwrites any union data inside the Service_ServiceDetails as the provided PrivateServiceDetails
func (t *Service_ServiceDetails) FromPrivateServiceDetails(v PrivateServiceDetails) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePrivateServiceDetails performs a merge with any union data inside the Service_ServiceDetails, using the provided PrivateServiceDetails
func (t *Service_ServiceDetails) MergePrivateServiceDetails(v PrivateServiceDetails) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsBackgroundWorkerDetails returns the union data inside the Service_ServiceDetails as a BackgroundWorkerDetails
func (t Service_ServiceDetails) AsBackgroundWorkerDetails() (BackgroundWorkerDetails, error) {
	var body BackgroundWorkerDetails
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBackgroundWorkerDetails overwrites any union data inside the Service_ServiceDetails as the provided BackgroundWorkerDetails
func (t *Service_ServiceDetails) FromBackgroundWorkerDetails(v BackgroundWorkerDetails) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBackgroundWorkerDetails performs a merge with any union data inside the Service_ServiceDetails, using the provided BackgroundWorkerDetails
func (t *Service_ServiceDetails) MergeBackgroundWorkerDetails(v BackgroundWorkerDetails) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCronJobDetails returns the union data inside the Service_ServiceDetails as a CronJobDetails
func (t Service_ServiceDetails) AsCronJobDetails() (CronJobDetails, error) {
	var body CronJobDetails
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCronJobDetails overwrites any union data inside the Service_ServiceDetails as the provided CronJobDetails
func (t *Service_ServiceDetails) FromCronJobDetails(v CronJobDetails) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCronJobDetails performs a merge with any union data inside the Service_ServiceDetails, using the provided CronJobDetails
func (t *Service_ServiceDetails) MergeCronJobDetails(v CronJobDetails) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t Service_ServiceDetails) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *Service_ServiceDetails) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsStaticSiteDetailsPATCH returns the union data inside the ServicePATCH_ServiceDetails as a StaticSiteDetailsPATCH
func (t ServicePATCH_ServiceDetails) AsStaticSiteDetailsPATCH() (StaticSiteDetailsPATCH, error) {
	var body StaticSiteDetailsPATCH
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromStaticSiteDetailsPATCH overwrites any union data inside the ServicePATCH_ServiceDetails as the provided StaticSiteDetailsPATCH
func (t *ServicePATCH_ServiceDetails) FromStaticSiteDetailsPATCH(v StaticSiteDetailsPATCH) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeStaticSiteDetailsPATCH performs a merge with any union data inside the ServicePATCH_ServiceDetails, using the provided StaticSiteDetailsPATCH
func (t *ServicePATCH_ServiceDetails) MergeStaticSiteDetailsPATCH(v StaticSiteDetailsPATCH) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsWebServiceDetailsPATCH returns the union data inside the ServicePATCH_ServiceDetails as a WebServiceDetailsPATCH
func (t ServicePATCH_ServiceDetails) AsWebServiceDetailsPATCH() (WebServiceDetailsPATCH, error) {
	var body WebServiceDetailsPATCH
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromWebServiceDetailsPATCH overwrites any union data inside the ServicePATCH_ServiceDetails as the provided WebServiceDetailsPATCH
func (t *ServicePATCH_ServiceDetails) FromWebServiceDetailsPATCH(v WebServiceDetailsPATCH) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeWebServiceDetailsPATCH performs a merge with any union data inside the ServicePATCH_ServiceDetails, using the provided WebServiceDetailsPATCH
func (t *ServicePATCH_ServiceDetails) MergeWebServiceDetailsPATCH(v WebServiceDetailsPATCH) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPrivateServiceDetailsPATCH returns the union data inside the ServicePATCH_ServiceDetails as a PrivateServiceDetailsPATCH
func (t ServicePATCH_ServiceDetails) AsPrivateServiceDetailsPATCH() (PrivateServiceDetailsPATCH, error) {
	var body PrivateServiceDetailsPATCH
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPrivateServiceDetailsPATCH overwrites any union data inside the ServicePATCH_ServiceDetails as the provided PrivateServiceDetailsPATCH
func (t *ServicePATCH_ServiceDetails) FromPrivateServiceDetailsPATCH(v PrivateServiceDetailsPATCH) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePrivateServiceDetailsPATCH performs a merge with any union data inside the ServicePATCH_ServiceDetails, using the provided PrivateServiceDetailsPATCH
func (t *ServicePATCH_ServiceDetails) MergePrivateServiceDetailsPATCH(v PrivateServiceDetailsPATCH) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsBackgroundWorkerDetailsPATCH returns the union data inside the ServicePATCH_ServiceDetails as a BackgroundWorkerDetailsPATCH
func (t ServicePATCH_ServiceDetails) AsBackgroundWorkerDetailsPATCH() (BackgroundWorkerDetailsPATCH, error) {
	var body BackgroundWorkerDetailsPATCH
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBackgroundWorkerDetailsPATCH overwrites any union data inside the ServicePATCH_ServiceDetails as the provided BackgroundWorkerDetailsPATCH
func (t *ServicePATCH_ServiceDetails) FromBackgroundWorkerDetailsPATCH(v BackgroundWorkerDetailsPATCH) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBackgroundWorkerDetailsPATCH performs a merge with any union data inside the ServicePATCH_ServiceDetails, using the provided BackgroundWorkerDetailsPATCH
func (t *ServicePATCH_ServiceDetails) MergeBackgroundWorkerDetailsPATCH(v BackgroundWorkerDetailsPATCH) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCronJobDetailsPATCH returns the union data inside the ServicePATCH_ServiceDetails as a CronJobDetailsPATCH
func (t ServicePATCH_ServiceDetails) AsCronJobDetailsPATCH() (CronJobDetailsPATCH, error) {
	var body CronJobDetailsPATCH
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCronJobDetailsPATCH overwrites any union data inside the ServicePATCH_ServiceDetails as the provided CronJobDetailsPATCH
func (t *ServicePATCH_ServiceDetails) FromCronJobDetailsPATCH(v CronJobDetailsPATCH) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCronJobDetailsPATCH performs a merge with any union data inside the ServicePATCH_ServiceDetails, using the provided CronJobDetailsPATCH
func (t *ServicePATCH_ServiceDetails) MergeCronJobDetailsPATCH(v CronJobDetailsPATCH) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t ServicePATCH_ServiceDetails) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ServicePATCH_ServiceDetails) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsStaticSiteDetailsPOST returns the union data inside the ServicePOST_ServiceDetails as a StaticSiteDetailsPOST
func (t ServicePOST_ServiceDetails) AsStaticSiteDetailsPOST() (StaticSiteDetailsPOST, error) {
	var body StaticSiteDetailsPOST
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromStaticSiteDetailsPOST overwrites any union data inside the ServicePOST_ServiceDetails as the provided StaticSiteDetailsPOST
func (t *ServicePOST_ServiceDetails) FromStaticSiteDetailsPOST(v StaticSiteDetailsPOST) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeStaticSiteDetailsPOST performs a merge with any union data inside the ServicePOST_ServiceDetails, using the provided StaticSiteDetailsPOST
func (t *ServicePOST_ServiceDetails) MergeStaticSiteDetailsPOST(v StaticSiteDetailsPOST) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsWebServiceDetailsPOST returns the union data inside the ServicePOST_ServiceDetails as a WebServiceDetailsPOST
func (t ServicePOST_ServiceDetails) AsWebServiceDetailsPOST() (WebServiceDetailsPOST, error) {
	var body WebServiceDetailsPOST
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromWebServiceDetailsPOST overwrites any union data inside the ServicePOST_ServiceDetails as the provided WebServiceDetailsPOST
func (t *ServicePOST_ServiceDetails) FromWebServiceDetailsPOST(v WebServiceDetailsPOST) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeWebServiceDetailsPOST performs a merge with any union data inside the ServicePOST_ServiceDetails, using the provided WebServiceDetailsPOST
func (t *ServicePOST_ServiceDetails) MergeWebServiceDetailsPOST(v WebServiceDetailsPOST) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsPrivateServiceDetailsPOST returns the union data inside the ServicePOST_ServiceDetails as a PrivateServiceDetailsPOST
func (t ServicePOST_ServiceDetails) AsPrivateServiceDetailsPOST() (PrivateServiceDetailsPOST, error) {
	var body PrivateServiceDetailsPOST
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromPrivateServiceDetailsPOST overwrites any union data inside the ServicePOST_ServiceDetails as the provided PrivateServiceDetailsPOST
func (t *ServicePOST_ServiceDetails) FromPrivateServiceDetailsPOST(v PrivateServiceDetailsPOST) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergePrivateServiceDetailsPOST performs a merge with any union data inside the ServicePOST_ServiceDetails, using the provided PrivateServiceDetailsPOST
func (t *ServicePOST_ServiceDetails) MergePrivateServiceDetailsPOST(v PrivateServiceDetailsPOST) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsBackgroundWorkerDetailsPOST returns the union data inside the ServicePOST_ServiceDetails as a BackgroundWorkerDetailsPOST
func (t ServicePOST_ServiceDetails) AsBackgroundWorkerDetailsPOST() (BackgroundWorkerDetailsPOST, error) {
	var body BackgroundWorkerDetailsPOST
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromBackgroundWorkerDetailsPOST overwrites any union data inside the ServicePOST_ServiceDetails as the provided BackgroundWorkerDetailsPOST
func (t *ServicePOST_ServiceDetails) FromBackgroundWorkerDetailsPOST(v BackgroundWorkerDetailsPOST) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeBackgroundWorkerDetailsPOST performs a merge with any union data inside the ServicePOST_ServiceDetails, using the provided BackgroundWorkerDetailsPOST
func (t *ServicePOST_ServiceDetails) MergeBackgroundWorkerDetailsPOST(v BackgroundWorkerDetailsPOST) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCronJobDetailsPOST returns the union data inside the ServicePOST_ServiceDetails as a CronJobDetailsPOST
func (t ServicePOST_ServiceDetails) AsCronJobDetailsPOST() (CronJobDetailsPOST, error) {
	var body CronJobDetailsPOST
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCronJobDetailsPOST overwrites any union data inside the ServicePOST_ServiceDetails as the provided CronJobDetailsPOST
func (t *ServicePOST_ServiceDetails) FromCronJobDetailsPOST(v CronJobDetailsPOST) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCronJobDetailsPOST performs a merge with any union data inside the ServicePOST_ServiceDetails, using the provided CronJobDetailsPOST
func (t *ServicePOST_ServiceDetails) MergeCronJobDetailsPOST(v CronJobDetailsPOST) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t ServicePOST_ServiceDetails) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ServicePOST_ServiceDetails) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsExternalRef4EventType returns the union data inside the EventTypeParam as a externalRef4.EventType
func (t EventTypeParam) AsExternalRef4EventType() (externalRef4.EventType, error) {
	var body externalRef4.EventType
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromExternalRef4EventType overwrites any union data inside the EventTypeParam as the provided externalRef4.EventType
func (t *EventTypeParam) FromExternalRef4EventType(v externalRef4.EventType) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeExternalRef4EventType performs a merge with any union data inside the EventTypeParam, using the provided externalRef4.EventType
func (t *EventTypeParam) MergeExternalRef4EventType(v externalRef4.EventType) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t EventTypeParam) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *EventTypeParam) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
